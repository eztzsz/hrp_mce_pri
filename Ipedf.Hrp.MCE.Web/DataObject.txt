/*此文件放置所有当前模块的数据库对象创建脚本,未避免创建出错,请增加对象的存在判断机制*/

--厂家证书
CREATE TABLE MTR_B_PRD_CERT
(
ID CHAR(36) NOT NULL ENABLE,
CODE VARCHAR2(50),
NAME VARCHAR2(50),
NATURE_ID CHAR(36),--证件所属
TYPE_ID CHAR(36),--证书类型
PRD_ID CHAR(36),--厂家名称MDM_D_DEPT
ACQUIRE_DATE DATE,--发证日期
BEGIN_DATE DATE,--效期开始
END_DATE DATE,--效期结束
LEGAL_PERSON VARCHAR2(50),--法定代表人
ENTERPRISES_PERSON VARCHAR2(50),--企业负责人
REGADDRESS VARCHAR2(200), --注册地址
CERTIFYING_AUTHORITY VARCHAR2(200),--发证单位
IS_OVERDUE NUMBER(3),--是否过期
COMMENTS VARCHAR2(200)
);
ALTER TABLE MTR_B_PRD_CERT ADD CONSTRAINT PK_MTR_B_PRD_CERT PRIMARY KEY(ID);
alter table MTR_B_PRD_CERT
  add constraint FK_MTR_B_PRD_CERT foreign key (PRD_ID)
  references MDM_D_DEPT (ID) on delete cascade;

--供应商证书
CREATE TABLE MTR_B_PRV_CERT(
ID CHAR(36) NOT NULL ENABLE,
CODE VARCHAR2(50),
NAME VARCHAR2(50),
NATURE_ID CHAR(36),--证件所属
TYPE_ID CHAR(36),--证书类型
PRV_ID CHAR(36),--供应商名称MDM_D_DEPT
ACQUIRE_DATE DATE,--发证日期
BEGIN_DATE DATE,--效期开始
END_DATE DATE,--效期结束
LEGAL_PERSON VARCHAR2(50),--法定代表人
ENTERPRISES_PERSON VARCHAR2(50),--企业负责人
REGADDRESS VARCHAR2(200), --注册地址
CERTIFYING_AUTHORITY VARCHAR2(200),--发证单位
IS_OVERDUE NUMBER(3),--是否过期
COMMENTS VARCHAR2(200)
);

ALTER TABLE MTR_B_PRV_CERT ADD CONSTRAINT PK_MTR_B_PRV_CERT PRIMARY KEY(ID);  
alter table MTR_B_PRV_CERT
  add constraint FK_MTR_B_PRV_CERT foreign key (PRV_ID)
  references MDM_D_DEPT (ID) on delete cascade;

--物资证书
CREATE TABLE MTR_B_MTR_CERT(
ID CHAR(36) NOT NULL ENABLE,
CODE VARCHAR2(50),
NAME VARCHAR2(50),
NATURE_ID CHAR(36),--证件所属
TYPE_ID CHAR(36),--证书类型
MATER_ID CHAR(36),--物资名称MTR_D_MTR
ACQUIRE_DATE DATE,--发证日期
BEGIN_DATE DATE,--效期开始
END_DATE DATE,--效期结束
CERTIFYING_AUTHORITY VARCHAR2(200),--发证单位
IS_OVERDUE NUMBER(3),--是否过期
COMMENTS VARCHAR2(200)
);

ALTER TABLE MTR_B_MTR_CERT ADD CONSTRAINT PK_MTR_B_MTR_CERT PRIMARY KEY(ID);
alter table MTR_B_MTR_CERT
  add constraint FK_MTR_B_MTR_CERT foreign key (NATURE_ID)
  references MTR_D_MTR (ID) on delete cascade;

create table MTR_B_AOG
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  create_date      DATE,
  stock_id         CHAR(36),
  provider_id      CHAR(36),
  user_id          CHAR(36),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_dept_id   CHAR(36),
  create_time      DATE,
  modify_user_id   CHAR(36),
  modify_dept_id   CHAR(36),
  modify_time      DATE,
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36)
);
comment on column MTR_B_AOG.code
  is '单号';
comment on column MTR_B_AOG.create_date
  is '到货日期';
comment on column MTR_B_AOG.stock_id
  is '到货仓库';
comment on column MTR_B_AOG.provider_id
  is '供货公司';
comment on column MTR_B_AOG.user_id
  is '登记人';
alter table MTR_B_AOG
  add constraint PK_MTR_B_AOG primary key (ID)
 ;


create table MTR_B_AOG_D
(
  id           CHAR(36) not null,
  base_id      CHAR(36),
  mater_id     CHAR(36),
  spec         VARCHAR2(50),
  amount       NUMBER(22,4),
  pkg_amount   NUMBER(22,4),
  unit_id      CHAR(36),
  price        NUMBER(22,4),
  money        NUMBER(22,4),
  batch_code   VARCHAR2(50),
  prd_id       CHAR(36),
  prd_date     DATE,
  invalid_date DATE,
  comments     VARCHAR2(200),
  ref_tab_name VARCHAR2(50),
  ref_tab_id   CHAR(36)
)
;
comment on column MTR_B_AOG_D.mater_id
  is '物资';
comment on column MTR_B_AOG_D.spec
  is '规格';
comment on column MTR_B_AOG_D.amount
  is '数量';
comment on column MTR_B_AOG_D.pkg_amount
  is '包装数量';
comment on column MTR_B_AOG_D.unit_id
  is '单位';
comment on column MTR_B_AOG_D.price
  is '单价';
comment on column MTR_B_AOG_D.money
  is '金额';
comment on column MTR_B_AOG_D.batch_code
  is '批号';
comment on column MTR_B_AOG_D.prd_id
  is '厂家';
comment on column MTR_B_AOG_D.prd_date
  is '生产日期';
comment on column MTR_B_AOG_D.invalid_date
  is '失效日期';
comment on column MTR_B_AOG_D.comments
  is '备注';
alter table MTR_B_AOG_D
  add constraint PK_MTR_B_AOG_D primary key (ID)
 ;
alter table MTR_B_AOG_D
  add constraint FK_MTR_B_AOG_D_B foreign key (BASE_ID)
  references MTR_B_AOG (ID) on delete cascade;


create table MTR_B_INSTOCK
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  create_date      DATE,
  instock_type_id  CHAR(36),
  stock_id         CHAR(36),
  provider_id      CHAR(36),
  invoice_code     VARCHAR2(50),
  invoice_date     DATE,
  user_id          CHAR(36),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_dept_id   CHAR(36),
  create_time      DATE,
  modify_user_id   CHAR(36),
  modify_dept_id   CHAR(36),
  modify_time      DATE,
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36),
  use_dept_id      CHAR(36),
  use_user_id      CHAR(36)
)
;
comment on column MTR_B_INSTOCK.code
  is '单号';
comment on column MTR_B_INSTOCK.create_date
  is '入库日期';
comment on column MTR_B_INSTOCK.instock_type_id
  is '入库类型';
comment on column MTR_B_INSTOCK.stock_id
  is '入库仓库';
comment on column MTR_B_INSTOCK.provider_id
  is '供货公司';
comment on column MTR_B_INSTOCK.invoice_code
  is '发票号';
comment on column MTR_B_INSTOCK.invoice_date
  is '发票日期';
comment on column MTR_B_INSTOCK.user_id
  is '入库人';
comment on column MTR_B_INSTOCK.use_dept_id
  is '领用科室';
comment on column MTR_B_INSTOCK.use_user_id
  is '领用人';
alter table MTR_B_INSTOCK
  add constraint PK_MTR_B_INSTOCK primary key (ID)
  ;


create table MTR_B_INSTOCK_D
(
  id           CHAR(36) not null,
  base_id      CHAR(36),
  mater_id     CHAR(36),
  spec         VARCHAR2(50),
  amount       NUMBER(22,4),
  pkg_amount   NUMBER(22,4),
  unit_id      CHAR(36),
  price        NUMBER(22,4),
  money        NUMBER(22,4),
  batch_code   VARCHAR2(50),
  prd_id       CHAR(36),
  prd_date     DATE,
  invalid_date DATE,
  comments     VARCHAR2(200),
  ref_tab_name VARCHAR2(50),
  ref_tab_id   CHAR(36)
)
;
comment on column MTR_B_INSTOCK_D.mater_id
  is '物资';
comment on column MTR_B_INSTOCK_D.spec
  is '规格';
comment on column MTR_B_INSTOCK_D.amount
  is '数量';
comment on column MTR_B_INSTOCK_D.pkg_amount
  is '包装数量';
comment on column MTR_B_INSTOCK_D.unit_id
  is '单位';
comment on column MTR_B_INSTOCK_D.price
  is '单价';
comment on column MTR_B_INSTOCK_D.money
  is '金额';
comment on column MTR_B_INSTOCK_D.batch_code
  is '批号';
comment on column MTR_B_INSTOCK_D.prd_id
  is '厂家';
comment on column MTR_B_INSTOCK_D.prd_date
  is '生产日期';
comment on column MTR_B_INSTOCK_D.invalid_date
  is '失效日期';
comment on column MTR_B_INSTOCK_D.comments
  is '备注';
alter table MTR_B_INSTOCK_D
  add constraint PK_MTR_B_INSTOCK_D primary key (ID)
 ;
alter table MTR_B_INSTOCK_D
  add constraint FK_MTR_B_INSTOCK_D_B foreign key (BASE_ID)
  references MTR_B_INSTOCK (ID) on delete cascade;


create table MTR_B_INSTOCK_REQ
(
  id               CHAR(36) not null,
  create_date      DATE,
  dept_id          CHAR(36),
  user_id          CHAR(36),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_dept_id   CHAR(36),
  create_time      DATE,
  modify_user_id   CHAR(36),
  modify_dept_id   CHAR(36),
  modify_time      DATE,
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36),
  code             VARCHAR2(50)
)
;
comment on column MTR_B_INSTOCK_REQ.create_date
  is '计划日期';
comment on column MTR_B_INSTOCK_REQ.dept_id
  is '计划科室';
comment on column MTR_B_INSTOCK_REQ.user_id
  is '计划人';
comment on column MTR_B_INSTOCK_REQ.code
  is '编码';
alter table MTR_B_INSTOCK_REQ
  add constraint PK_MTR_B_INSTOCK_REQ primary key (ID)
 ;


create table MTR_B_INSTOCK_REQ_D
(
  id              CHAR(36) not null,
  base_id         CHAR(36),
  mater_id        CHAR(36),
  spec            VARCHAR2(50),
  apply_amount    NUMBER(22,4),
  approved_amount NUMBER(22,4),
  unit_id         CHAR(36),
  pkg_amount      NUMBER(22,4),
  price           NUMBER(22,4),
  money           NUMBER(22,4),
  comments        VARCHAR2(200),
  delivery_date   DATE
);
comment on column MTR_B_INSTOCK_REQ_D.mater_id
  is '物资';
comment on column MTR_B_INSTOCK_REQ_D.spec
  is '规格';
comment on column MTR_B_INSTOCK_REQ_D.apply_amount
  is '计划数量';
comment on column MTR_B_INSTOCK_REQ_D.approved_amount
  is '核准数量';
comment on column MTR_B_INSTOCK_REQ_D.unit_id
  is '单位';
comment on column MTR_B_INSTOCK_REQ_D.pkg_amount
  is '包装数量';
comment on column MTR_B_INSTOCK_REQ_D.price
  is '计划价格';
comment on column MTR_B_INSTOCK_REQ_D.money
  is '计划金额';
comment on column MTR_B_INSTOCK_REQ_D.comments
  is '备注';
comment on column MTR_B_INSTOCK_REQ_D.delivery_date
  is '交货日期';
alter table MTR_B_INSTOCK_REQ_D
  add constraint PK_MTR_B_INSTOCK_REQ_D primary key (ID)
  ;
alter table MTR_B_INSTOCK_REQ_D
  add constraint FK_MTR_B_INSTOCK_REQ_D_B foreign key (BASE_ID)
  references MTR_B_INSTOCK_REQ (ID) on delete cascade;


create table MTR_B_INSTOCK_REQ_SUM
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  create_date      DATE,
  dept_id          CHAR(36),
  user_id          CHAR(36),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_dept_id   CHAR(36),
  create_time      DATE,
  modify_user_id   CHAR(36),
  modify_dept_id   CHAR(36),
  modify_time      DATE,
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36)
)
;
comment on column MTR_B_INSTOCK_REQ_SUM.code
  is '编码';
comment on column MTR_B_INSTOCK_REQ_SUM.create_date
  is '计划日期';
comment on column MTR_B_INSTOCK_REQ_SUM.dept_id
  is '计划科室';
comment on column MTR_B_INSTOCK_REQ_SUM.user_id
  is '计划人';
alter table MTR_B_INSTOCK_REQ_SUM
  add constraint PK_MTR_B_INSTOCK_REQ_SUM primary key (ID)
  ;

create table MTR_B_INSTOCK_REQ_SUM_C
(
  id           CHAR(36) not null,
  base_id      CHAR(36),
  ref_tab_name VARCHAR2(50),
  ref_tab_id   CHAR(36)
)
;
alter table MTR_B_INSTOCK_REQ_SUM_C
  add constraint PK_MTR_B_INSTOCK_REQ_SUM_C primary key (ID)
 ;
alter table MTR_B_INSTOCK_REQ_SUM_C
  add constraint FK_MTR_B_INSTOCK_REQ_SUM_C_B foreign key (BASE_ID)
  references MTR_B_INSTOCK_REQ_SUM (ID) on delete cascade;


create table MTR_B_INSTOCK_REQ_SUM_D
(
  id              CHAR(36) not null,
  base_id         CHAR(36),
  mater_id        CHAR(36),
  spec            VARCHAR2(50),
  apply_amount    NUMBER(22,4),
  approved_amount NUMBER(22,4),
  unit_id         CHAR(36),
  pkg_amount      NUMBER(22,4),
  price           NUMBER(22,4),
  money           NUMBER(22,4),
  comments        VARCHAR2(200),
  stock_amount    NUMBER(22,4),
  delivery_date   DATE
)
;
comment on column MTR_B_INSTOCK_REQ_SUM_D.mater_id
  is '物资';
comment on column MTR_B_INSTOCK_REQ_SUM_D.spec
  is '规格';
comment on column MTR_B_INSTOCK_REQ_SUM_D.apply_amount
  is '申请数量';
comment on column MTR_B_INSTOCK_REQ_SUM_D.approved_amount
  is '采购数量';
comment on column MTR_B_INSTOCK_REQ_SUM_D.unit_id
  is '单位';
comment on column MTR_B_INSTOCK_REQ_SUM_D.pkg_amount
  is '包装数量';
comment on column MTR_B_INSTOCK_REQ_SUM_D.price
  is '计划价格';
comment on column MTR_B_INSTOCK_REQ_SUM_D.money
  is '计划金额';
comment on column MTR_B_INSTOCK_REQ_SUM_D.comments
  is '备注';
comment on column MTR_B_INSTOCK_REQ_SUM_D.stock_amount
  is '库存数量';
comment on column MTR_B_INSTOCK_REQ_SUM_D.delivery_date
  is '交货日期';
alter table MTR_B_INSTOCK_REQ_SUM_D
  add constraint PK_MTR_B_INSTOCK_REQ_SUM_D primary key (ID)
  ;
alter table MTR_B_INSTOCK_REQ_SUM_D
  add constraint FK_MTR_B_INSTOCK_REQ_SUM_D_B foreign key (BASE_ID)
  references MTR_B_INSTOCK_REQ_SUM (ID) on delete cascade;

create table MTR_B_OUTSTOCK
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  create_date      DATE,
  outstock_type_id CHAR(36),
  stock_id         CHAR(36),
  user_id          CHAR(36),
  use_dept_id      CHAR(36),
  use_user_id      CHAR(36),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_dept_id   CHAR(36),
  create_time      DATE,
  modify_user_id   CHAR(36),
  modify_dept_id   CHAR(36),
  modify_time      DATE,
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36),
  purpose          VARCHAR2(50)
)
;
comment on column MTR_B_OUTSTOCK.code
  is '单号';
comment on column MTR_B_OUTSTOCK.create_date
  is '出库日期';
comment on column MTR_B_OUTSTOCK.outstock_type_id
  is '出库类型';
comment on column MTR_B_OUTSTOCK.stock_id
  is '出库仓库';
comment on column MTR_B_OUTSTOCK.user_id
  is '出库人';
comment on column MTR_B_OUTSTOCK.use_dept_id
  is '领用科室';
comment on column MTR_B_OUTSTOCK.use_user_id
  is '领用人';
comment on column MTR_B_OUTSTOCK.purpose
  is '用途';
alter table MTR_B_OUTSTOCK
  add constraint PK_MTR_B_OUTSTOCK primary key (ID)
  ;


create table MTR_B_OUTSTOCK_D
(
  id           CHAR(36) not null,
  base_id      CHAR(36),
  mater_id     CHAR(36),
  spec         VARCHAR2(50),
  amount       NUMBER(22,4),
  pkg_amount   NUMBER(22,4),
  unit_id      CHAR(36),
  price        NUMBER(22,4),
  money        NUMBER(22,4),
  batch_code   VARCHAR2(50),
  prd_id       CHAR(36),
  prd_date     DATE,
  invalid_date DATE,
  comments     VARCHAR2(200),
  ref_tab_name VARCHAR2(50),
  ref_tab_id   CHAR(36),
  retail_price NUMBER(22,4),
  retail_money NUMBER(22,4),
  stock_amount NUMBER(22,4),
  apply_amount NUMBER(22,4)
)
;
comment on column MTR_B_OUTSTOCK_D.id
  is '主键';
comment on column MTR_B_OUTSTOCK_D.base_id
  is '主表主键';
comment on column MTR_B_OUTSTOCK_D.mater_id
  is '物资';
comment on column MTR_B_OUTSTOCK_D.spec
  is '规格';
comment on column MTR_B_OUTSTOCK_D.amount
  is '数量';
comment on column MTR_B_OUTSTOCK_D.pkg_amount
  is '包装数量';
comment on column MTR_B_OUTSTOCK_D.unit_id
  is '单位';
comment on column MTR_B_OUTSTOCK_D.price
  is '单价';
comment on column MTR_B_OUTSTOCK_D.money
  is '金额';
comment on column MTR_B_OUTSTOCK_D.batch_code
  is '批号';
comment on column MTR_B_OUTSTOCK_D.prd_id
  is '厂家';
comment on column MTR_B_OUTSTOCK_D.prd_date
  is '生产日期';
comment on column MTR_B_OUTSTOCK_D.invalid_date
  is '失效日期';
comment on column MTR_B_OUTSTOCK_D.comments
  is '备注';
comment on column MTR_B_OUTSTOCK_D.ref_tab_name
  is '触发表名';
comment on column MTR_B_OUTSTOCK_D.ref_tab_id
  is '触发记录';
comment on column MTR_B_OUTSTOCK_D.retail_price
  is '零售价格';
comment on column MTR_B_OUTSTOCK_D.retail_money
  is '零售金额';
comment on column MTR_B_OUTSTOCK_D.stock_amount
  is '库存';
comment on column MTR_B_OUTSTOCK_D.apply_amount
  is '申请数量';
alter table MTR_B_OUTSTOCK_D
  add constraint PK_MTR_B_OUTSTOCK_D primary key (ID);
alter table MTR_B_OUTSTOCK_D
  add constraint FK_MTR_B_OUTSTOCK_D_B foreign key (BASE_ID)
  references MTR_B_OUTSTOCK (ID) on delete cascade;


create table MTR_B_PURCHASE_BILL
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  create_date      DATE,
  provider_id      CHAR(36),
  bill_type_id     CHAR(36),
  dept_id          CHAR(36),
  user_id          CHAR(36),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_dept_id   CHAR(36),
  create_time      DATE,
  modify_user_id   CHAR(36),
  modify_dept_id   CHAR(36),
  modify_time      DATE,
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36)
)
;
comment on column MTR_B_PURCHASE_BILL.code
  is '单号';
comment on column MTR_B_PURCHASE_BILL.create_date
  is '订单日期';
comment on column MTR_B_PURCHASE_BILL.provider_id
  is '供应商';
comment on column MTR_B_PURCHASE_BILL.bill_type_id
  is '订单类型';
comment on column MTR_B_PURCHASE_BILL.dept_id
  is '订单科室';
comment on column MTR_B_PURCHASE_BILL.user_id
  is '订单人';
alter table MTR_B_PURCHASE_BILL
  add constraint PK_MTR_B_PURCHASE_BILL primary key (ID)
  ;


create table MTR_B_PURCHASE_BILL_D
(
  id            CHAR(36) not null,
  base_id       CHAR(36),
  mater_id      CHAR(36),
  spec          VARCHAR2(50),
  amount        NUMBER(22,4),
  pkg_amount    NUMBER(22,4),
  unit_id       CHAR(36),
  price         NUMBER(22,4),
  money         NUMBER(22,4),
  comments      VARCHAR2(200),
  prd_id        CHAR(36),
  delivery_date DATE
)
;
comment on column MTR_B_PURCHASE_BILL_D.mater_id
  is '物资';
comment on column MTR_B_PURCHASE_BILL_D.spec
  is '规格';
comment on column MTR_B_PURCHASE_BILL_D.amount
  is '数量';
comment on column MTR_B_PURCHASE_BILL_D.pkg_amount
  is '包装数量';
comment on column MTR_B_PURCHASE_BILL_D.unit_id
  is '单位';
comment on column MTR_B_PURCHASE_BILL_D.price
  is '单价';
comment on column MTR_B_PURCHASE_BILL_D.money
  is '金额';
comment on column MTR_B_PURCHASE_BILL_D.comments
  is '备注';
comment on column MTR_B_PURCHASE_BILL_D.prd_id
  is '生产厂家';
comment on column MTR_B_PURCHASE_BILL_D.delivery_date
  is '交货日期';
alter table MTR_B_PURCHASE_BILL_D
  add constraint PK_MTR_B_PURCHASE_BILL_D primary key (ID)
 ;
alter table MTR_B_PURCHASE_BILL_D
  add constraint FK_MTR_B_PURCHASE_BILL_D_B foreign key (BASE_ID)
  references MTR_B_PURCHASE_BILL (ID) on delete cascade;


create table MTR_B_PURCHASE_PLAN
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  create_date      DATE,
  plan_type_id     CHAR(36),
  dept_id          CHAR(36),
  user_id          CHAR(36),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_dept_id   CHAR(36),
  create_time      DATE,
  modify_user_id   CHAR(36),
  modify_dept_id   CHAR(36),
  modify_time      DATE,
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36)
)
;
comment on column MTR_B_PURCHASE_PLAN.code
  is '单号';
comment on column MTR_B_PURCHASE_PLAN.create_date
  is '计划日期';
comment on column MTR_B_PURCHASE_PLAN.plan_type_id
  is '计划类型';
comment on column MTR_B_PURCHASE_PLAN.dept_id
  is '计划科室';
comment on column MTR_B_PURCHASE_PLAN.user_id
  is '计划人';
alter table MTR_B_PURCHASE_PLAN
  add constraint PK_MTR_B_PURCHASE_PLAN primary key (ID)
 ;

create table MTR_B_PURCHASE_PLAN_D
(
  id            CHAR(36) not null,
  base_id       CHAR(36),
  provider_id   CHAR(36),
  mater_id      CHAR(36),
  spec          VARCHAR2(50),
  amount        NUMBER(22,4),
  pkg_amount    NUMBER(22,4),
  unit_id       CHAR(36),
  price         NUMBER(22,4),
  money         NUMBER(22,4),
  comments      VARCHAR2(200),
  prd_id        CHAR(36),
  delivery_date DATE
)
;
comment on column MTR_B_PURCHASE_PLAN_D.provider_id
  is '供应商';
comment on column MTR_B_PURCHASE_PLAN_D.mater_id
  is '物资';
comment on column MTR_B_PURCHASE_PLAN_D.spec
  is '规格';
comment on column MTR_B_PURCHASE_PLAN_D.amount
  is '数量';
comment on column MTR_B_PURCHASE_PLAN_D.pkg_amount
  is '包装数量';
comment on column MTR_B_PURCHASE_PLAN_D.unit_id
  is '单位';
comment on column MTR_B_PURCHASE_PLAN_D.price
  is '单价';
comment on column MTR_B_PURCHASE_PLAN_D.money
  is '金额';
comment on column MTR_B_PURCHASE_PLAN_D.comments
  is '备注';
comment on column MTR_B_PURCHASE_PLAN_D.prd_id
  is '生产厂家';
comment on column MTR_B_PURCHASE_PLAN_D.delivery_date
  is '交货日期';
alter table MTR_B_PURCHASE_PLAN_D
  add constraint PK_MTR_B_PURCHASE_PLAN_D primary key (ID)
  ;
alter table MTR_B_PURCHASE_PLAN_D
  add constraint FK_MTR_B_PURCHASE_PLAN_D_B foreign key (BASE_ID)
  references MTR_B_PURCHASE_PLAN (ID) on delete cascade;


create table MTR_B_STOCK_DATA
(
  id                 CHAR(36) not null,
  mater_id           CHAR(36),
  spec               VARCHAR2(50),
  amount             NUMBER(22,4),
  pkg_amount         NUMBER(22,4),
  unit_id            CHAR(36),
  price              NUMBER(22,4),
  money              NUMBER(22,4),
  batch_code         VARCHAR2(50),
  prd_id             CHAR(36),
  prd_date           DATE,
  invalid_date       DATE,
  stock_data_type_id CHAR(36),
  ref_tab_name       VARCHAR2(50),
  ref_tab_id         CHAR(36),
  retail_price       NUMBER(22,4),
  stock_id           CHAR(36),
  create_date        DATE
)
;
comment on column MTR_B_STOCK_DATA.mater_id
  is '物资';
comment on column MTR_B_STOCK_DATA.spec
  is '规格';
comment on column MTR_B_STOCK_DATA.amount
  is '数量';
comment on column MTR_B_STOCK_DATA.pkg_amount
  is '包装数量';
comment on column MTR_B_STOCK_DATA.unit_id
  is '单位';
comment on column MTR_B_STOCK_DATA.price
  is '单价';
comment on column MTR_B_STOCK_DATA.money
  is '金额';
comment on column MTR_B_STOCK_DATA.batch_code
  is '批号';
comment on column MTR_B_STOCK_DATA.prd_id
  is '厂家';
comment on column MTR_B_STOCK_DATA.prd_date
  is '生产日期';
comment on column MTR_B_STOCK_DATA.invalid_date
  is '失效日期';
comment on column MTR_B_STOCK_DATA.stock_data_type_id
  is '库存数据类型';
comment on column MTR_B_STOCK_DATA.ref_tab_name
  is '触发表名';
comment on column MTR_B_STOCK_DATA.ref_tab_id
  is '触发记录';
comment on column MTR_B_STOCK_DATA.retail_price
  is '零售单价';
comment on column MTR_B_STOCK_DATA.stock_id
  is '仓库';
comment on column MTR_B_STOCK_DATA.create_date
  is '日期';
alter table MTR_B_STOCK_DATA
  add constraint PK_MTR_B_STOCK_DATA primary key (ID)
 ;


create table MTR_B_STOCK_DATA_CHECK
(
  id                 CHAR(36) not null,
  code               VARCHAR2(50),
  create_date        DATE,
  check_type_id      CHAR(36),
  stock_id           CHAR(36),
  user_id            CHAR(36),
  dept_id            CHAR(36),
  state              NUMBER(3),
  comments           VARCHAR2(200),
  create_user_id     CHAR(36),
  create_dept_id     CHAR(36),
  create_time        DATE,
  modify_user_id     CHAR(36),
  modify_dept_id     CHAR(36),
  modify_time        DATE,
  data_timestamp     TIMESTAMP(6),
  data_organise_id   CHAR(36),
  stock_data_type_id CHAR(36)
)
;
comment on column MTR_B_STOCK_DATA_CHECK.code
  is '单号';
comment on column MTR_B_STOCK_DATA_CHECK.create_date
  is '盘点日期';
comment on column MTR_B_STOCK_DATA_CHECK.check_type_id
  is '盘点类型';
comment on column MTR_B_STOCK_DATA_CHECK.stock_id
  is '盘点仓库';
comment on column MTR_B_STOCK_DATA_CHECK.user_id
  is '盘点人';
comment on column MTR_B_STOCK_DATA_CHECK.dept_id
  is '盘点科室';
comment on column MTR_B_STOCK_DATA_CHECK.stock_data_type_id
  is '库存类型';
alter table MTR_B_STOCK_DATA_CHECK
  add constraint PK_MTR_B_STOCK_DATA_CHECK primary key (ID)
 ;


create table MTR_B_STOCK_DATA_CHECK_D
(
  id           CHAR(36) not null,
  base_id      CHAR(36),
  mater_id     CHAR(36),
  spec         VARCHAR2(50),
  amount       NUMBER(22,4),
  pkg_amount   NUMBER(22,4),
  unit_id      CHAR(36),
  batch_code   VARCHAR2(50),
  prd_id       CHAR(36),
  comments     VARCHAR2(200),
  check_amount NUMBER(22,4),
  diff_amount  NUMBER(22,4)
)
;
comment on column MTR_B_STOCK_DATA_CHECK_D.mater_id
  is '物资';
comment on column MTR_B_STOCK_DATA_CHECK_D.spec
  is '规格';
comment on column MTR_B_STOCK_DATA_CHECK_D.amount
  is '库存数量';
comment on column MTR_B_STOCK_DATA_CHECK_D.pkg_amount
  is '包装数量';
comment on column MTR_B_STOCK_DATA_CHECK_D.unit_id
  is '单位';
comment on column MTR_B_STOCK_DATA_CHECK_D.batch_code
  is '批号';
comment on column MTR_B_STOCK_DATA_CHECK_D.prd_id
  is '厂家';
comment on column MTR_B_STOCK_DATA_CHECK_D.comments
  is '备注';
comment on column MTR_B_STOCK_DATA_CHECK_D.check_amount
  is '盘点数量';
comment on column MTR_B_STOCK_DATA_CHECK_D.diff_amount
  is '差异数量';
alter table MTR_B_STOCK_DATA_CHECK_D
  add constraint PK_MTR_B_STOCK_DATA_CHECK_D primary key (ID)
  ;
alter table MTR_B_STOCK_DATA_CHECK_D
  add constraint FK_MTR_B_STOCK_DATA_C_D_B foreign key (BASE_ID)
  references MTR_B_STOCK_DATA_CHECK (ID) on delete cascade;


create table MTR_B_STOCK_DATA_CHECK_TYPE
(
  id      CHAR(36) not null,
  base_id CHAR(36),
  type_id CHAR(36)
)
;
comment on column MTR_B_STOCK_DATA_CHECK_TYPE.type_id
  is '物资分类';
alter table MTR_B_STOCK_DATA_CHECK_TYPE
  add constraint PK_MTR_B_STOCK_DATA_CHECK_TYPE primary key (ID)
  ;
alter table MTR_B_STOCK_DATA_CHECK_TYPE
  add constraint FK_MTR_B_STOCK_DATA_CHECK_T_B foreign key (BASE_ID)
  references MTR_B_STOCK_DATA_CHECK (ID) on delete cascade;


create table MTR_B_STOCK_DATA_MOVE
(
  id                 CHAR(36) not null,
  code               VARCHAR2(50),
  create_date        DATE,
  from_stock_id      CHAR(36),
  to_stock_id        CHAR(36),
  user_id            CHAR(36),
  dept_id            CHAR(36),
  state              NUMBER(3),
  comments           VARCHAR2(200),
  create_user_id     CHAR(36),
  create_dept_id     CHAR(36),
  create_time        DATE,
  modify_user_id     CHAR(36),
  modify_dept_id     CHAR(36),
  modify_time        DATE,
  data_timestamp     TIMESTAMP(6),
  data_organise_id   CHAR(36),
  purpose            VARCHAR2(50),
  stock_data_type_id CHAR(36)
)
;
comment on column MTR_B_STOCK_DATA_MOVE.code
  is '调拨单号';
comment on column MTR_B_STOCK_DATA_MOVE.create_date
  is '调拨日期';
comment on column MTR_B_STOCK_DATA_MOVE.from_stock_id
  is '出库仓库';
comment on column MTR_B_STOCK_DATA_MOVE.to_stock_id
  is '入库仓库';
comment on column MTR_B_STOCK_DATA_MOVE.user_id
  is '调拨人';
comment on column MTR_B_STOCK_DATA_MOVE.dept_id
  is '调拨科室';
comment on column MTR_B_STOCK_DATA_MOVE.purpose
  is '用途';
comment on column MTR_B_STOCK_DATA_MOVE.stock_data_type_id
  is '库存数据类型';
alter table MTR_B_STOCK_DATA_MOVE
  add constraint PK_MTR_B_STOCK_DATA_MOVE primary key (ID)
  ;


create table MTR_B_STOCK_DATA_MOVE_D
(
  id           CHAR(36) not null,
  base_id      CHAR(36),
  mater_id     CHAR(36),
  spec         VARCHAR2(50),
  amount       NUMBER(22,4),
  pkg_amount   NUMBER(22,4),
  unit_id      CHAR(36),
  price        NUMBER(22,4),
  money        NUMBER(22,4),
  batch_code   VARCHAR2(50),
  prd_id       CHAR(36),
  prd_date     DATE,
  invalid_date DATE,
  comments     VARCHAR2(200),
  move_amount  NUMBER(22,4)
)
;
comment on column MTR_B_STOCK_DATA_MOVE_D.mater_id
  is '物资';
comment on column MTR_B_STOCK_DATA_MOVE_D.spec
  is '规格';
comment on column MTR_B_STOCK_DATA_MOVE_D.amount
  is '数量';
comment on column MTR_B_STOCK_DATA_MOVE_D.pkg_amount
  is '包装数量';
comment on column MTR_B_STOCK_DATA_MOVE_D.unit_id
  is '单位';
comment on column MTR_B_STOCK_DATA_MOVE_D.price
  is '单价';
comment on column MTR_B_STOCK_DATA_MOVE_D.money
  is '金额';
comment on column MTR_B_STOCK_DATA_MOVE_D.batch_code
  is '批号';
comment on column MTR_B_STOCK_DATA_MOVE_D.prd_id
  is '厂家';
comment on column MTR_B_STOCK_DATA_MOVE_D.prd_date
  is '生产日期';
comment on column MTR_B_STOCK_DATA_MOVE_D.invalid_date
  is '失效日期';
comment on column MTR_B_STOCK_DATA_MOVE_D.comments
  is '备注';
comment on column MTR_B_STOCK_DATA_MOVE_D.move_amount
  is '调拨数量';
alter table MTR_B_STOCK_DATA_MOVE_D
  add constraint PK_MTR_B_STOCK_DATA_MOVE_D primary key (ID)
 ;
alter table MTR_B_STOCK_DATA_MOVE_D
  add constraint FK_MTR_B_STOCK_DATA_MOVE_D_B foreign key (BASE_ID)
  references MTR_B_STOCK_DATA_MOVE (ID) on delete cascade;


create table MTR_D_MTR
(
  id                 CHAR(36) not null,
  type_id            CHAR(36),
  stock_up_limit     NUMBER(22,4),
  stock_down_limit   NUMBER(22,4),
  code               VARCHAR2(50),
  name               VARCHAR2(50),
  spell_code         VARCHAR2(50),
  five_stroke_code   VARCHAR2(50),
  international_code VARCHAR2(50),
  custom_code        VARCHAR2(50),
  finance_name       VARCHAR2(50),
  finance_code       VARCHAR2(50),
  spec               VARCHAR2(50),
  price              NUMBER(22,4),
  unit_id            CHAR(36),
  pkg_amount         NUMBER(22,4),
  pkg_unit_id        CHAR(36),
  pkg_price          NUMBER(22,4),
  prd_id             CHAR(36),
  price_rule_id      CHAR(36),
  source_id          CHAR(36),
  usage_id           CHAR(36),
  is_invalid         NUMBER(3),
  is_fi_charge       NUMBER(3),
  is_valuable        NUMBER(3),
  is_spec            NUMBER(3),
  is_pkg             NUMBER(3),
  is_otp             NUMBER(3),
  is_batch           NUMBER(3),
  is_plan_instock    NUMBER(3),
  state              NUMBER(3),
  comments           VARCHAR2(200),
  create_user_id     CHAR(36),
  create_dept_id     CHAR(36),
  create_time        DATE,
  modify_user_id     CHAR(36),
  modify_dept_id     CHAR(36),
  modify_time        DATE,
  data_timestamp     TIMESTAMP(6),
  data_organise_id   CHAR(36),
  provider_id        CHAR(36)
)
;
comment on column MTR_D_MTR.id
  is '主键';
comment on column MTR_D_MTR.type_id
  is '物料类型';
comment on column MTR_D_MTR.stock_up_limit
  is '库存上限';
comment on column MTR_D_MTR.stock_down_limit
  is '库存下限';
comment on column MTR_D_MTR.code
  is '物资编码';
comment on column MTR_D_MTR.name
  is '物资名称';
comment on column MTR_D_MTR.spell_code
  is '拼音码';
comment on column MTR_D_MTR.five_stroke_code
  is '五笔码';
comment on column MTR_D_MTR.international_code
  is '国际码';
comment on column MTR_D_MTR.custom_code
  is '自定义码';
comment on column MTR_D_MTR.finance_name
  is '财务名称';
comment on column MTR_D_MTR.finance_code
  is '财务编码';
comment on column MTR_D_MTR.spec
  is '物资规格';
comment on column MTR_D_MTR.price
  is '单价';
comment on column MTR_D_MTR.unit_id
  is '单位';
comment on column MTR_D_MTR.pkg_amount
  is '包装数量';
comment on column MTR_D_MTR.pkg_unit_id
  is '包装单位';
comment on column MTR_D_MTR.pkg_price
  is '包装价格';
comment on column MTR_D_MTR.prd_id
  is '生产厂家';
comment on column MTR_D_MTR.price_rule_id
  is '加价规则';
comment on column MTR_D_MTR.source_id
  is '物资来源';
comment on column MTR_D_MTR.usage_id
  is '物资用途';
comment on column MTR_D_MTR.is_invalid
  is '是否停用';
comment on column MTR_D_MTR.is_fi_charge
  is '是否财务收费';
comment on column MTR_D_MTR.is_valuable
  is '是否高值耗材';
comment on column MTR_D_MTR.is_spec
  is '是否特殊标志';
comment on column MTR_D_MTR.is_pkg
  is '是否打包';
comment on column MTR_D_MTR.is_otp
  is '是否一次性耗材';
comment on column MTR_D_MTR.is_batch
  is '是否按批次管理';
comment on column MTR_D_MTR.is_plan_instock
  is '是否按月计划入库';
alter table MTR_D_MTR
  add constraint PK_MTR_D_MTR primary key (ID)
;

create table MTR_D_MTR_FEE
(
  id               CHAR(36) not null,
  mtr_id           VARCHAR2(50),
  fee_item_id      VARCHAR2(50),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_dept_id   CHAR(36),
  create_time      DATE,
  modify_user_id   CHAR(36),
  modify_dept_id   CHAR(36),
  modify_time      DATE,
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36)
)
;
comment on column MTR_D_MTR_FEE.id
  is '主键';
comment on column MTR_D_MTR_FEE.mtr_id
  is '物资';
comment on column MTR_D_MTR_FEE.fee_item_id
  is '非药品收费项目';
alter table MTR_D_MTR_FEE
  add constraint PK_MTR_D_MTR_FEE primary key (ID)
  ;

create table MTR_D_MTR_PROVIDER
(
  id          CHAR(36) not null,
  base_id     CHAR(36),
  provider_id CHAR(36),
  state       NUMBER(3)
)
;
comment on column MTR_D_MTR_PROVIDER.base_id
  is '物资';
comment on column MTR_D_MTR_PROVIDER.provider_id
  is '供应商';
comment on column MTR_D_MTR_PROVIDER.state
  is '是否有效';
alter table MTR_D_MTR_PROVIDER
  add constraint PK_MTR_D_MTR_PROVIDER primary key (ID)
  ;
alter table MTR_D_MTR_PROVIDER
  add constraint PK_MTR_D_MTR_PROVIDER_B foreign key (BASE_ID)
  references MTR_D_MTR (ID) on delete cascade;


create table MTR_D_MTR_PROVIDER_PRICE
(
  id         CHAR(36) not null,
  base_id    CHAR(36),
  price      NUMBER(22,4),
  begin_date DATE,
  end_date   DATE,
  state      NUMBER(3)
)
;
comment on column MTR_D_MTR_PROVIDER_PRICE.base_id
  is '物资供应商';
comment on column MTR_D_MTR_PROVIDER_PRICE.price
  is '价格';
comment on column MTR_D_MTR_PROVIDER_PRICE.begin_date
  is '开始日期';
comment on column MTR_D_MTR_PROVIDER_PRICE.end_date
  is '结束日期';
comment on column MTR_D_MTR_PROVIDER_PRICE.state
  is '是否有效';
alter table MTR_D_MTR_PROVIDER_PRICE
  add constraint PK_MTR_D_MTR_PROVIDER_PRICE primary key (ID)
  ;
alter table MTR_D_MTR_PROVIDER_PRICE
  add constraint FK_MTR_D_MTR_PROVIDER_PRICE_B foreign key (BASE_ID)
  references MTR_D_MTR_PROVIDER (ID) on delete cascade;


create table MTR_D_MTR_TYPE
(
  id                 CHAR(36) not null,
  code               VARCHAR2(50),
  name               VARCHAR2(50),
  spell_code         VARCHAR2(50),
  five_stroke_code   VARCHAR2(50),
  international_code VARCHAR2(50),
  custom_code        VARCHAR2(50),
  finance_name       VARCHAR2(50),
  finance_code       VARCHAR2(50),
  order_index        NUMBER(3),
  parent_id          CHAR(36),
  state              NUMBER(3),
  comments           VARCHAR2(200),
  create_user_id     CHAR(36),
  create_dept_id     CHAR(36),
  create_time        DATE,
  modify_user_id     CHAR(36),
  modify_dept_id     CHAR(36),
  modify_time        DATE,
  data_timestamp     TIMESTAMP(6),
  data_organise_id   CHAR(36)
)
;
comment on column MTR_D_MTR_TYPE.id
  is '主键';
comment on column MTR_D_MTR_TYPE.code
  is '编码';
comment on column MTR_D_MTR_TYPE.name
  is '名称';
comment on column MTR_D_MTR_TYPE.spell_code
  is '拼音码';
comment on column MTR_D_MTR_TYPE.five_stroke_code
  is '五笔码';
comment on column MTR_D_MTR_TYPE.international_code
  is '国际码';
comment on column MTR_D_MTR_TYPE.custom_code
  is '自定义码';
comment on column MTR_D_MTR_TYPE.finance_name
  is '财务名称';
comment on column MTR_D_MTR_TYPE.finance_code
  is '财务编码';
comment on column MTR_D_MTR_TYPE.order_index
  is '顺序号';
comment on column MTR_D_MTR_TYPE.parent_id
  is '上级';
alter table MTR_D_MTR_TYPE
  add constraint PK_MTR_D_MTR_TYPE primary key (ID)
  ;


create table MTR_D_PRICE_RULE
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  name             VARCHAR2(50),
  increase_scale   NUMBER(22,4),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_dept_id   CHAR(36),
  create_time      DATE,
  modify_user_id   CHAR(36),
  modify_dept_id   CHAR(36),
  modify_time      DATE,
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36)
)
;
comment on column MTR_D_PRICE_RULE.id
  is '主键';
comment on column MTR_D_PRICE_RULE.code
  is '编码';
comment on column MTR_D_PRICE_RULE.name
  is '名称';
comment on column MTR_D_PRICE_RULE.increase_scale
  is '加价比例';
alter table MTR_D_PRICE_RULE
  add constraint PK_MTR_D_PRICE_RULE primary key (ID)
  ;

create table MTR_D_USED_DEPT
(
  id               CHAR(36) not null,
  biz_type_id      CHAR(36),
  order_index      NUMBER(3),
  dept_id          CHAR(36),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_dept_id   CHAR(36),
  create_time      DATE,
  modify_user_id   CHAR(36),
  modify_dept_id   CHAR(36),
  modify_time      DATE,
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36)
)
;
comment on column MTR_D_USED_DEPT.biz_type_id
  is '业务类型';
comment on column MTR_D_USED_DEPT.order_index
  is '顺序号';
comment on column MTR_D_USED_DEPT.dept_id
  is '科室名称';
alter table MTR_D_USED_DEPT
  add constraint PK_MTR_D_USED_DEPT primary key (ID)
  ;
--2015-12-8,叶杨,增加INVALID_DATE的值列表和分组条件 
create or replace view v_mtr_stock_data as
select t.stock_id,
mater_id,
t.spec,
t.amount,
t.pkg_amount,
t.unit_id,
t.price,
t.money,
t.batch_code,
t.stock_data_type_id,
t.prd_id,t.prd_date,t.INVALID_DATE
from
(
select
stock_id,
mater_id,
spec,
sum(amount) as amount,
pkg_amount,
unit_id,
price,
sum(money) as money,
batch_code,
stock_data_type_id,
prd_id,
prd_date,
INVALID_DATE
from mtr_b_stock_data
group by
stock_id,
mater_id,
spec,
unit_id,
price,
batch_code,
stock_data_type_id,
prd_id,
prd_date,
INVALID_DATE,
pkg_amount)
t where t.amount  > 0;



--叶杨:2015-12-05修改,替换掉原来的SP_mtr_Archive_instock_req_sum
create or replace procedure SP_mtr_Audit_instock_req_sum(p_planid in char,p_msg out varchar2,p_succeed out number )
Authid Current_User 
 as
V_DYNA_SQL clob;
V_EXEC_SQL clob;
V_STATE number(3);
V_PRE_BUDGET_YEAR char(36);
V_TEMP_TAB varchar2(50);
V_MORETHAN number(22,4);
V_BUDGET_CPN_ID char(36);
V_BUDGET_TEMPLET_ID char(36);
v_ErrorCode varchar2(1024);
v_ErrorMsg varchar2(1024);
v_CurrentUser varchar2(1024);
v_Information varchar2(1024);
v_PATTERN char(36);
V_LEVEL char(36);
/*
1、归档科室申请汇总数据（MTR_B_instock_req_sum）,
2、归档引用的科室申请（MTR_B_instock_req）
3、入库汇总数据明细中库存不足的记录，自动生成采购计划(MTR_B_purchase_plan)
*/
begin   
    --变量初始化
    V_MORETHAN := 0;
    --取所有关联的科室申请（MTR_B_instock_req_sum_c）
    for config in(
                    select
                    t.id,
                    t.ref_tab_id
                    from  Mtr_b_Instock_Req_Sum_c t
                    where t.base_id = p_planid
                  )
          loop
             --更新对应的科室申请(MTR_B_instock_req)状态为已归档
             execute immediate 'update MTR_B_instock_req t
             set t.state=4 where t.id= '''||config.ref_tab_id||'''';
          end loop;
      --更新汇总表（MTR_B_instock_req_sum）的状态为已归档
      execute immediate ' update MTR_B_instock_req_sum t set t.state=4 where t.id='''||p_planid||'''';
      --检查是否需要自动生成采购计划
      execute immediate 'select 
      sum(d.approved_amount) - sum(d.stock_amount)
      from
      MTR_B_instock_req_sum_d d
      where d.base_id ='''||p_planid||'''
      group by d.base_id
      ' into V_MORETHAN;
      if V_MORETHAN > 0 then
        begin
           --生成采购计划           
           execute immediate 'insert into MTR_B_purchase_plan
           (
             id,
             code,
             create_date,
             plan_type_id,
             dept_id,
             user_id,
             state
           )
           select 
             f.id,
             f.code,
             sysdate,
             ''00410002'',
             f.dept_id,
             f.user_id,
             1
            from MTR_B_instock_req_sum f 
            where f.id = '''||p_planid||'''';
           --生成采购计划明细
            for config in(
                select
                t.id,
                t.mater_id,
                t.spec,
                t.unit_id,
                t.pkg_amount,
                t.price,
                t.money,
                t.comments,
                t.approved_amount,
                t.stock_amount,
                t.approved_amount - t.stock_amount as plan_amount,
                m.provider_id,
                m.prd_id
                from  MTR_B_INSTOCK_REQ_SUM_d t,mtr_d_mtr m
                where t.base_id = p_planid
                and t.approved_amount > t.stock_amount
                and m.id = t.mater_id
              )
              loop  
                
                 execute immediate '
                 insert into MTR_B_purchase_plan_d(
                 id,
                 base_id,
                 mater_id,
                 spec,
                 amount,
                 pkg_amount,
                 unit_id,
                 price,
                 money,
                 provider_id,
                 prd_id,
                 comments
                 )
                 select 
                 '''||config.id||''',
                 '''||p_planid||''',
                 '''||config.mater_id||''',
                 '''||config.spec||''',
                 '||config.plan_amount||',
                 round('||config.pkg_amount||'/m.PKG_AMOUNT,2),
                 '''||config.unit_id||''',
                 '||config.price||',
                 '||(config.plan_amount * config.price)||',
                 '''||config.provider_id||''',
                 '''||config.prd_id||''',
                 '''||config.comments||'''
                 from  MTR_D_MTR m where m.id = '''||config.mater_id||'''
                 ';
                 
              end loop; 
        end;
      end if;
      commit;
      p_msg:= '';
      p_succeed := 1;--返回成功
exception
      when others
        then
        v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        /*写失败标志*/
        p_succeed := 0;
        rollback;
END SP_mtr_Audit_instock_req_sum;



--2015-12-16:陈镜宇修改:由于<''>在Oracle中默认为<null>
--所以把判断科室仓库是否存在的条件从(V_STOCK_ID := '')改为(V_STOCK_ID is null)
--2015-12-20:陈镜宇修改:如果不填PKG_AMOUNT会影响查看库存等功能，如果PKG_AMOUNT为空默认赋值0。PRICE，RETAIL_PRICE字段同为0。

create or replace procedure SP_mtr_Audit_instock(p_planid in char,p_msg out varchar2,p_succeed out number )
Authid Current_User 
 as
V_DYNA_SQL clob;
V_EXEC_SQL clob;
V_STATE number(3);
V_NEWID char(36);
V_STOCK_ID char(36);
V_INSTOCK_TYPE char(36);
V_STOCK_DATA_TYPE char(36);
V_TEMP_TAB varchar2(50);
V_BUDGET_CPN_ID char(36);
V_BUDGET_TEMPLET_ID char(36);
v_ErrorCode varchar2(1024);
v_ErrorMsg varchar2(1024);
v_CurrentUser varchar2(1024);
v_Information varchar2(1024);
v_PATTERN char(36);
V_LEVEL char(36);
/*
1、更新入库单的状态为已审核（MTR_B_INSTOCK）
2、增加库存（MTR_B_STOCK_DATA）
3、生成财务凭证/成本数据(待集成实现)
4、更新引用单据状态（如果存在）
*/
begin   
      --变量初始化
      select trim(INSTOCK_TYPE_ID) into V_INSTOCK_TYPE from MTR_B_INSTOCK where id = p_planid;
      if V_INSTOCK_TYPE = '00390004' then --领用入库
         begin
            --变量初始化
            --1.库存数据类型
            V_STOCK_DATA_TYPE := '00400001'; --普通库存
            --2.仓库ID
            --判断科室仓库是否存在
            select 
            decode
            (
            ( select t.id from MDM_D_STOCK t
            where t.STOCK_TYPE_ID = '00320002'--科室仓库
            and t.DEPT_ID =(select USE_DEPT_ID from MTR_B_INSTOCK where id=p_planid))
            ,
            null,
            '',
            ( select t.id from MDM_D_STOCK t
            where t.STOCK_TYPE_ID = '00320002'--科室仓库
            and t.DEPT_ID =(select USE_DEPT_ID from MTR_B_INSTOCK where id=p_planid))
            )
            into V_STOCK_ID
            from dual;
           --不存在则创建
            if V_STOCK_ID is null then
               begin
                  V_STOCK_ID := sys_guid();
                  insert into MDM_D_STOCK(id,STOCK_TYPE_ID,DEPT_ID,NAME,COMMENTS)
                  select V_STOCK_ID,'00320002',i.USE_DEPT_ID,d.NAME,'后台自动创建'
                  from MTR_B_INSTOCK i,COM_DEPART d
                  where i.id = p_planid
                  and d.id = i.use_dept_id;
               end;
            end if;
                        
         end;
      else --普通库存,备货库存,赠品库存
         begin
              --变量初始化
              --1.库存数据类型
              select case when V_INSTOCK_TYPE = '00390001' then '00400001' --普通库存
                     when V_INSTOCK_TYPE = '00390002' then '00400002' --备货库存
                     when V_INSTOCK_TYPE = '00390003' then '00400003' --赠品库存
                     else '00400001'
              end into V_STOCK_DATA_TYPE from dual; 
              --2.仓库ID     
              select STOCK_ID into V_STOCK_ID
              from MTR_B_INSTOCK where id= p_planid;        
         end;
      end if;
      --创建指定仓库的指定库存数据类型的库存数据
      insert into MTR_B_STOCK_DATA
             (
                id,
                STOCK_ID,
                AMOUNT,
                BATCH_CODE,
                MATER_ID,
                MONEY,
                INVALID_DATE,
                PKG_AMOUNT,
                PRD_DATE,
                PRD_ID,
                PRICE,
                REF_TAB_ID,
                REF_TAB_NAME,
                SPEC,
                STOCK_DATA_TYPE_ID,
                RETAIL_PRICE,
                UNIT_ID,
                CREATE_DATE
             )
             select 
                sys_guid(),
                V_STOCK_ID,--仓库变量
                t.AMOUNT,
                t.BATCH_CODE,
                t.MATER_ID,
                t.MONEY,
                t.INVALID_DATE,
                decode(t.PKG_AMOUNT,null,0,t.PKG_AMOUNT),
                t.PRD_DATE,
                t.PRD_ID,
                decode(t.PRICE,null,0,t.PRICE),
                t.ID,
                'MTR_B_INSTOCK_D',
                t.SPEC,   
                V_STOCK_DATA_TYPE, --库存数据类型变量 
                0,           
                t.UNIT_ID,
                sysdate
               from MTR_B_INSTOCK_D t,MTR_B_INSTOCK b
               where t.base_id = p_planid  
               and b.id =t.base_id; 
      --更新关联单据的状态
      --1.采购订单引入
      update MTR_B_PURCHASE_BILL t
                           set t.state = 4
                           where t.id in
                           (
                               select base_id from MTR_B_PURCHASE_BILL_D where id in
                               (
                                 select d.REF_TAB_ID  
                                 from MTR_B_INSTOCK_D d 
                                 where d.REF_TAB_NAME = 'MTR_B_PURCHASE_BILL_D'
                                 and d.base_id =p_planid
                               )
                           );
      --2.到货通知单引入
      update MTR_B_AOG t
                           set t.state = 4
                           where t.id in
                           (
                               select base_id from MTR_B_AOG_D where id in
                               (
                                 select d.REF_TAB_ID  
                                 from MTR_B_INSTOCK_D d 
                                 where d.REF_TAB_NAME = 'MTR_B_AOG_D'
                                  and d.base_id = p_planid
                               )
                           );   
      --更新入库单状态为已审核
      update MTR_B_INSTOCK set state = 3 where id = p_planid;
      
      commit;
      p_msg:= '';
      p_succeed := 1;--返回成功
exception
      when others
        then
        v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        /*写失败标志*/
        p_succeed := 0;
        rollback;
END SP_mtr_Audit_instock;



--2015-12-05,叶杨修改,增加防止因库存不足导致的死循环退出机制
create or replace procedure SP_mtr_Audit_outstock(p_planid in char,p_msg out varchar2,p_succeed out number )
Authid Current_User 
 as
V_DYNA_SQL clob;
V_EXEC_SQL clob;
V_STATE number(3);
V_NEWID char(36);
V_CYCLESCOUNT number(9);
V_TEMP_TAB varchar2(50);
V_REQUEST number(22,4);
V_COMPLETED number(22,4);
V_BUDGET_CPN_ID char(36);
V_BUDGET_TEMPLET_ID char(36);
v_ErrorCode varchar2(1024);
v_ErrorMsg varchar2(1024);
v_CurrentUser varchar2(1024);
v_Information varchar2(1024);
v_PATTERN char(36);
V_LEVEL char(36);
V_TEMPNUM number(9);   --记录每次满足增量
/*
1、更新出库单的状态为已审核（MTR_B_OUTSTOCK）
2、扣减库存（MTR_B_STOCK_DATA）
3、更新出库单明细(MTR_B_OUTSTOCK_D)中的零售价格和零售金额,更新凭据为物资（MTR_D_MTR）的加价规则(MTR_D_PRICE_RULE)
4、生成财务凭证/成本数据(待集成实现)
*/
begin   
      for config in(
                    select                    
                    t.ID,
                    t.AMOUNT,                    
                    t.MATER_ID, 
                    t.SPEC,  
                    t.UNIT_ID ,                
                    t.PKG_AMOUNT,                    
                    t.COMMENTS,
                    b.stock_id
                    from  MTR_B_OUTSTOCK_d t,
                    MTR_B_OUTSTOCK b
                    where t.base_id = p_planid
                    and t.base_id = b.id
                  )
              loop
                --更新零售单价
                update MTR_B_OUTSTOCK_d d
                set d.retail_price = d.retail_price * 
                (
                        select INCREASE_SCALE 
                        from MTR_D_PRICE_RULE 
                        where id =
                        (
                           select price_rule_id 
                           from MTR_D_MTR 
                           where id=config.mater_id
                         )
                )                
                where d.id = config.id;
                --更新零售金额
                update MTR_B_OUTSTOCK_d d
                set d.retail_money = d.amount * d.retail_price
                where d.id = config.id;
                --循环次数
                V_CYCLESCOUNT:=0;
                --需求量
                V_REQUEST := config.AMOUNT;
                --满足量
                V_COMPLETED:=0;
                while V_COMPLETED <> V_REQUEST /*如果需求未被满足,则持续循环扣减*/
                loop  
                      --初始化满足增量
                      V_TEMPNUM := 0;
                      --记录ID
                      V_NEWID :=sys_guid();
                      --扣减库存
                      insert into MTR_B_STOCK_DATA
                      (
                        id,
                        mater_id,
                        spec,
                        amount,
                        pkg_amount,
                        unit_id,
                        price,
                        money,
                        batch_code,
                        prd_id,
                        prd_date,
                        invalid_date,
                        stock_data_type_id,
                        ref_tab_name,
                        ref_tab_id,
                        retail_price,
                        stock_id,
                        create_date    
                      )
                      select 
                      V_NEWID,
                      t2.mater_id,
                      t2.spec,
                      --判断当前记录的库存量,如果大于等于未满足的需求量,则使用未满足需求量的值进行扣减
                      --否则,则使用当前记录的库存量进行扣减,且进入下一次循环
                      case 
                        when t2.amount >= (V_REQUEST - V_COMPLETED) then (V_REQUEST - V_COMPLETED) * -1
                        else t2.amount * -1 
                      end,
                      t2.pkg_amount,
                      t2.unit_id,
                      t2.price,
                      t2.money,
                      t2.batch_code,
                      t2.prd_id,
                      t2.prd_date,
                      t2.invalid_date,
                      t2.stock_data_type_id,
                      'MTR_B_OUTSTOCK_D',
                      config.id,
                      t2.retail_price,
                      t2.stock_id,
                      t2.create_date
                      from 
                      (
                          select 
                          t.stock_id, 
                          t.mater_id,
                          t.unit_id,
                          t.stock_data_type_id,
                          sum(t.amount) amount,
                          t.prd_date,
                          t.batch_code,
                          t.prd_id,
                          t.price,
                          t.spec
                          from mtr_b_stock_data t 
                          where 1=1
                          group by --口径与库存视图(v_mtr_stock_data)一致
                          t.stock_id,
                          t.mater_id,
                          t.unit_id,
                          t.stock_data_type_id,
                          t.prd_date,
                          t.batch_code,
                          t.prd_id,
                          t.price,
                          t.spec,
                          t.pkg_amount
                      )
                      t1, --库存数据分组合计
                      (
                          select 
                          id,
                          mater_id,
                          spec,
                          amount,
                          pkg_amount,
                          unit_id,
                          price,
                          money,
                          batch_code,
                          prd_id,
                          prd_date,
                          invalid_date,
                          stock_data_type_id,
                          ref_tab_name,
                          ref_tab_id,
                          retail_price,
                          stock_id,
                          create_date   
                          from mtr_b_stock_data t
                          where t.amount > 0 
                          order by t.prd_date 
                      ) t2 --库存数据先进先出
                      where
                        t1.mater_id = t2.mater_id
                        and t1.stock_id = t2.stock_id
                        and t1.stock_data_type_id = t2.stock_data_type_id
                        and t1.prd_date = t2.prd_date
                        /*and t1.prd_id = t2.prd_id*/
                        /*and t1.spec = t2.spec*/
                        /*and t1.batch_code = t2.batch_code*/
                        /*and t1.unit_id = t2.unit_id*/
                        and t1.amount >0
                                              
                        and t2.stock_id = config.stock_id
                        and t2.stock_data_type_id = '00400001' --普通库存                              
                        and t2.mater_id = config.mater_id                              
                        /*and t2.spec = config.spec*/
                        /*and t2.pkg_amount = config.pkg_amount*/
                        /*and t2.unit_id = config.unit_id*/
  
                                                                    
                        and rownum = 1
                        order by t2.prd_date;
                       
                       --20151205
                       --获取满足增量
                       select amount * -1 into V_TEMPNUM
                        from MTR_B_STOCK_DATA
                       where id = V_NEWID;
                       
                       --更新满足辆
                       V_COMPLETED := V_COMPLETED + V_TEMPNUM;
                       --20151205End
                       
                       --记录循环次数
                       V_CYCLESCOUNT := V_CYCLESCOUNT + 1;
                       --检查循环次数,防止因库存不足导致的死循环
                       if V_CYCLESCOUNT = V_REQUEST + 1 then /*循环次数不可能等于需求数 + 1*/
                          raise NO_DATA_FOUND;
                       end if;
                end loop;
              end loop;
      
      --更新出库单状态为已审核
      update MTR_B_OUTSTOCK set state = 3 where id = p_planid;
      
      commit;
      p_msg:= '';
      p_succeed := 1;--返回成功
exception
      when others
        then
        v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        /*写失败标志*/
        p_succeed := 0;
        rollback;
END SP_mtr_Audit_outstock;




create or replace procedure SP_mtr_Audit_purchase_plan(p_planid in char,p_msg out varchar2,p_succeed out number )
Authid Current_User 
 as
V_DYNA_SQL clob;
V_EXEC_SQL clob;
V_STATE number(3);
V_PRE_BUDGET_YEAR char(36);
V_TEMP_TAB varchar2(50);
V_NEW_ID char(36);
V_PRICE number(22,4);
V_BUDGET_CPN_ID char(36);
V_BUDGET_TEMPLET_ID char(36);
v_ErrorCode varchar2(1024);
v_ErrorMsg varchar2(1024);
v_CurrentUser varchar2(1024);
v_Information varchar2(1024);
v_PATTERN char(36);
V_LEVEL char(36);
/*
1、审核采购计划（MTR_B_purchase_plan）,
2、按供应商分组生成采购订单（MTR_B_purchase_bill）
3、采购订单明细（MTR_B_purchase_bill_d）中的单价从FN_MTR_GET_MATER_PRICE获取
*/
begin   
   
    --获取供应商分组数据
    for config in(
                    select
                    t.provider_id
                    from  MTR_B_purchase_plan_d t
                    where t.base_id = p_planid
                    group by t.provider_id
                  )
          loop
             execute immediate 'select sys_guid() from dual' into V_NEW_ID;
             --创建采购订单主记录
             insert into MTR_B_PURCHASE_BILL
             (id, BILL_TYPE_ID,CREATE_DATE,DEPT_ID,USER_ID,PROVIDER_ID,CODE)
             select V_NEW_ID,'00420001',sysdate,DEPT_ID,USER_ID,config.provider_id,code
             from MTR_B_purchase_plan where id = p_planid;               
             --创建采购订单明细记录
              for dconfig in(
                    select
                    t.AMOUNT,
                    t.ID,
                    t.COMMENTS,
                    t.DELIVERY_DATE,
                    t.MATER_ID,                   
                    t.PKG_AMOUNT,
                    t.PRD_ID,
                    t.SPEC,
                    t.UNIT_ID 
                    from  MTR_B_purchase_plan_d t
                    where t.base_id = p_planid
                    and  t.provider_id = config.provider_id
                  )
              loop
                --获取价格
                V_PRICE:= FN_MTR_GET_MATER_PRICE(dconfig.mater_id,config.provider_id);
                --生成明细
                insert into MTR_B_PURCHASE_BILL_D
                (id,AMOUNT,BASE_ID,COMMENTS,DELIVERY_DATE,MATER_ID,PKG_AMOUNT,PRD_ID,PRICE,MONEY,SPEC,UNIT_ID)
                select sys_guid(),dconfig.amount,V_NEW_ID,dconfig.COMMENTS,
                dconfig.DELIVERY_DATE,dconfig.MATER_ID,dconfig.PKG_AMOUNT,
                dconfig.PRD_ID,V_PRICE,V_PRICE*dconfig.amount,dconfig.SPEC,dconfig.UNIT_ID
                from dual;
              end loop;
          end loop;
      --审核采购计划
      update MTR_B_purchase_plan t set t.state =3 where id =p_planid;
      commit;
      p_msg:= '';
      p_succeed := 1;--返回成功
exception
      when others
        then
        v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        /*写失败标志*/
        p_succeed := 0;
        rollback;
END SP_mtr_Audit_purchase_plan;



create or replace procedure SP_mtr_Audit_stockdatacheck(p_planid in char,p_msg out varchar2,p_succeed out number )
Authid Current_User 
 as
V_DYNA_SQL clob;
V_EXEC_SQL clob;
V_STATE number(3);
V_NEWID char(36);
V_TEMP_TAB varchar2(50);
V_REQUEST number(22,4);
V_COMPLETED number(22,4);
V_BUDGET_CPN_ID char(36);
V_BUDGET_TEMPLET_ID char(36);
v_ErrorCode varchar2(1024);
v_ErrorMsg varchar2(1024);
v_CurrentUser varchar2(1024);
v_Information varchar2(1024);
v_PATTERN char(36);
V_LEVEL char(36);
/*
1、更新盘点单的状态为已审核（MTR_B_STOCK_data_Check）
2、按照盘点差异值增减库存（MTR_B_STOCK_DATA）
3、生成财务凭证/成本数据(待集成实现)
*/
begin   
      for config in(
                    select                    
                    t.ID,
                    t.AMOUNT,                    
                    t.MATER_ID, 
                    t.SPEC,  
                    t.UNIT_ID ,                
                    t.PKG_AMOUNT, 
                    t.prd_id,
                    t.batch_code,               
                    t.COMMENTS,
                    t.diff_amount,
                    b.stock_id,
                    b.stock_data_type_id
                    from  MTR_B_STOCK_data_Check_d t,
                    MTR_B_STOCK_data_Check b
                    where t.base_id = p_planid
                    and t.base_id = b.id
                    and t.diff_amount <> 0
                  )
              loop
                if config.diff_amount > 0 then --盘盈，要增加库存
                  begin
                       insert into MTR_B_STOCK_DATA
                              (
                                id,
                                mater_id,
                                spec,
                                amount,
                                pkg_amount,
                                unit_id,
                                price,
                                money,
                                batch_code,
                                prd_id,
                                prd_date,
                                invalid_date,
                                stock_data_type_id,
                                ref_tab_name,
                                ref_tab_id,
                                retail_price,
                                stock_id,
                                create_date    
                              )
                              select 
                              sys_guid(),
                              t2.mater_id,
                              t2.spec,
                              config.diff_amount,--差异值（正值）
                              t2.pkg_amount,
                              t2.unit_id,
                              t2.price,
                              t2.money,
                              t2.batch_code,
                              t2.prd_id,
                              t2.prd_date,
                              t2.invalid_date,
                              t2.stock_data_type_id,
                              'MTR_B_STOCK_DATA_CHECK_D',
                              config.id,
                              t2.retail_price,
                              t2.stock_id,
                              t2.create_date
                              from 
                              (
                                  select 
                                  t.stock_id, 
                                  t.mater_id,
                                  t.unit_id,
                                  t.stock_data_type_id,
                                  sum(t.amount) amount,
                                  t.prd_date,
                                  t.batch_code,
                                  t.prd_id,
                                  t.price,
                                  t.spec
                                  from mtr_b_stock_data t 
                                  where 1=1
                                  group by --口径与库存视图(v_mtr_stock_data)一致
                                  t.stock_id,
                                  t.mater_id,
                                  t.unit_id,
                                  t.stock_data_type_id,
                                  t.prd_date,
                                  t.batch_code,
                                  t.prd_id,
                                  t.price,
                                  t.spec
                              )
                              t1, --库存数据分组合计
                              (
                                  select 
                                  id,
                                  mater_id,
                                  spec,
                                  amount,
                                  pkg_amount,
                                  unit_id,
                                  price,
                                  money,
                                  batch_code,
                                  prd_id,
                                  prd_date,
                                  invalid_date,
                                  stock_data_type_id,
                                  ref_tab_name,
                                  ref_tab_id,
                                  retail_price,
                                  stock_id,
                                  create_date   
                                  from mtr_b_stock_data t
                                  where t.amount > 0 
                                  order by t.prd_date 
                              ) t2 --库存数据先进先出
                              where
                                  t1.mater_id = t2.mater_id
                              and t1.stock_id = t2.stock_id
                              and t1.stock_data_type_id = t2.stock_data_type_id
                              and t1.prd_date = t2.prd_date
                              /*and t1.prd_id = t2.prd_id
                              and t1.spec = t2.spec
                              and t1.batch_code = t2.batch_code
                              and t1.unit_id = t2.unit_id*/
                              and t1.amount >0
                              
                              and t2.stock_id = config.stock_id
                              and t2.stock_data_type_id = config.stock_data_type_id                            
                              and t2.mater_id = config.mater_id 
   
                                                    
                              and rownum = 1
                              order by t2.prd_date;
                  end;
                else  --盘亏,要扣减库存
                  begin
                        --需求量
                        V_REQUEST := config.diff_amount * -1;--差异值（负值）
                        --满足量
                        V_COMPLETED:=0;
                        while V_COMPLETED <> V_REQUEST /*如果需求未被满足,则持续循环扣减*/
                        loop  
                              --记录ID
                              V_NEWID :=sys_guid();
                              --扣减库存
                              insert into MTR_B_STOCK_DATA
                              (
                                id,
                                mater_id,
                                spec,
                                amount,
                                pkg_amount,
                                unit_id,
                                price,
                                money,
                                batch_code,
                                prd_id,
                                prd_date,
                                invalid_date,
                                stock_data_type_id,
                                ref_tab_name,
                                ref_tab_id,
                                retail_price,
                                stock_id,
                                create_date    
                              )
                              select 
                              V_NEWID,
                              t2.mater_id,
                              t2.spec,
                              --判断当前记录的库存量,如果大于等于未满足的需求量,则使用未满足需求量的值进行扣减
                              --否则,则使用当前记录的库存量进行扣减,且进入下一次循环
                              case 
                                when t2.amount >= (V_REQUEST - V_COMPLETED) then V_REQUEST * -1
                                else t2.amount * -1 
                              end,
                              t2.pkg_amount,
                              t2.unit_id,
                              t2.price,
                              t2.money,
                              t2.batch_code,
                              t2.prd_id,
                              t2.prd_date,
                              t2.invalid_date,
                              t2.stock_data_type_id,
                              'MTR_B_STOCK_DATA_CHECK_D',
                              config.id,
                              t2.retail_price,
                              t2.stock_id,
                              t2.create_date
                              from 
                              (
                                  select 
                                  t.stock_id, 
                                  t.mater_id,
                                  t.unit_id,
                                  t.stock_data_type_id,
                                  sum(t.amount) amount,
                                  t.prd_date,
                                  t.batch_code,
                                  t.prd_id,
                                  t.price,
                                  t.spec
                                  from mtr_b_stock_data t 
                                  where 1=1
                                  group by --口径与库存视图(v_mtr_stock_data)一致
                                  t.stock_id,
                                  t.mater_id,
                                  t.unit_id,
                                  t.stock_data_type_id,
                                  t.prd_date,
                                  t.batch_code,
                                  t.prd_id,
                                  t.price,
                                  t.spec
                              )
                              t1, --库存数据分组合计
                              (
                                  select 
                                  id,
                                  mater_id,
                                  spec,
                                  amount,
                                  pkg_amount,
                                  unit_id,
                                  price,
                                  money,
                                  batch_code,
                                  prd_id,
                                  prd_date,
                                  invalid_date,
                                  stock_data_type_id,
                                  ref_tab_name,
                                  ref_tab_id,
                                  retail_price,
                                  stock_id,
                                  create_date   
                                  from mtr_b_stock_data t
                                  where t.amount > 0 
                                  order by t.prd_date 
                              ) t2 --库存数据先进先出
                              where
                                  t1.mater_id = t2.mater_id
                              and t1.stock_id = t2.stock_id
                              and t1.stock_data_type_id = t2.stock_data_type_id
                              and t1.prd_date = t2.prd_date
                              /*
                              and t1.prd_id = t2.prd_id
                              and t1.spec = t2.spec
                              and t1.batch_code = t2.batch_code
                              and t1.unit_id = t2.unit_id*/
                              and t1.amount >0
                              
                              and t2.stock_id = config.stock_id
                              and t2.stock_data_type_id = config.stock_data_type_id                             
                              and t2.mater_id = config.mater_id  
                              
                                                           
                                                    
                              and rownum = 1
                              order by t2.prd_date;
                              --更新满足量
                              select amount * -1 into V_COMPLETED 
                              from MTR_B_STOCK_DATA 
                              where id = V_NEWID;
                        end loop;
                  end;
                end if;             
              end loop;
      
      --更新出库单状态为已审核
      update MTR_B_STOCK_data_Check set state = 3 where id = p_planid;
      
      commit;
      p_msg:= '';
      p_succeed := 1;--返回成功
exception
      when others
        then
        v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        /*写失败标志*/
        p_succeed := 0;
        rollback;
END SP_mtr_Audit_stockdatacheck;



create or replace procedure SP_mtr_Audit_stockdatamove(p_planid in char,p_msg out varchar2,p_succeed out number )
Authid Current_User 
 as
V_DYNA_SQL clob;
V_EXEC_SQL clob;
V_STATE number(3);
V_NEWID char(36);
V_TEMP_TAB varchar2(50);
V_REQUEST number(22,4);
V_COMPLETED number(22,4);
V_BUDGET_CPN_ID char(36);
V_BUDGET_TEMPLET_ID char(36);
v_ErrorCode varchar2(1024);
v_ErrorMsg varchar2(1024);
v_CurrentUser varchar2(1024);
v_Information varchar2(1024);
v_PATTERN char(36);
V_LEVEL char(36);
/*
1、更新调拨单的状态为已审核（MTR_B_STOCK_data_move）
2、按照调拨数量增减库存（MTR_B_STOCK_DATA）
*/
begin   
      for config in(
                    select                    
                    t.ID,
                    t.AMOUNT,                    
                    t.MATER_ID, 
                    t.SPEC,  
                    t.UNIT_ID ,                
                    t.PKG_AMOUNT, 
                    t.prd_id,
                    t.batch_code,               
                    t.COMMENTS,
                    t.MOVE_AMOUNT,
                    b.from_stock_id,
                    b.to_stock_id,
                    b.stock_data_type_id
                    from  MTR_B_STOCK_data_move_d t,
                    MTR_B_STOCK_data_move b
                    where t.base_id = p_planid
                    and t.base_id = b.id
                    and t.MOVE_AMOUNT <> 0
                  )
              loop
                --调入库,要增加库存
                       insert into MTR_B_STOCK_DATA
                              (
                                id,
                                mater_id,
                                spec,
                                amount,
                                pkg_amount,
                                unit_id,
                                price,
                                money,
                                batch_code,
                                prd_id,
                                prd_date,
                                invalid_date,
                                stock_data_type_id,
                                ref_tab_name,
                                ref_tab_id,
                                retail_price,
                                stock_id,
                                create_date    
                              )
                              select 
                              sys_guid(),
                              t2.mater_id,
                              t2.spec,
                              config.move_amount,--调拨量
                              t2.pkg_amount,
                              t2.unit_id,
                              t2.price,
                              t2.money,
                              t2.batch_code,
                              t2.prd_id,
                              t2.prd_date,
                              t2.invalid_date,
                              t2.stock_data_type_id,
                              'MTR_B_STOCK_DATA_MOVE_D',
                              config.id,
                              t2.retail_price,
                              config.to_stock_id,--调入库
                              t2.create_date
                              from 
                              (
                                  select 
                                  t.stock_id, 
                                  t.mater_id,
                                  t.unit_id,
                                  t.stock_data_type_id,
                                  sum(t.amount) amount,
                                  t.prd_date,
                                  t.batch_code,
                                  t.prd_id,
                                  t.price,
                                  t.spec
                                  from mtr_b_stock_data t 
                                  where 1=1
                                  group by --口径与库存视图(v_mtr_stock_data)一致
                                  t.stock_id,
                                  t.mater_id,
                                  t.unit_id,
                                  t.stock_data_type_id,
                                  t.prd_date,
                                  t.batch_code,
                                  t.prd_id,
                                  t.price,
                                  t.spec
                              )
                              t1, --库存数据分组合计
                              (
                                  select 
                                  id,
                                  mater_id,
                                  spec,
                                  amount,
                                  pkg_amount,
                                  unit_id,
                                  price,
                                  money,
                                  batch_code,
                                  prd_id,
                                  prd_date,
                                  invalid_date,
                                  stock_data_type_id,
                                  ref_tab_name,
                                  ref_tab_id,
                                  retail_price,
                                  stock_id,
                                  create_date   
                                  from mtr_b_stock_data t
                                  where t.amount > 0 
                                  order by t.prd_date 
                              ) t2 --库存数据先进先出
                              where
                                  t1.mater_id = t2.mater_id
                              and t1.stock_id = t2.stock_id
                              and t1.stock_data_type_id = t2.stock_data_type_id
                              and t1.prd_date = t2.prd_date
                              /*and t1.prd_id = t2.prd_id
                              and t1.spec = t2.spec
                              and t1.batch_code = t2.batch_code
                              and t1.unit_id = t2.unit_id*/
                              and t1.amount >0
                              
                              and t2.stock_id = config.from_stock_id --从调出库取库存
                              and t2.stock_data_type_id = config.stock_data_type_id                             
                              and t2.mater_id = config.mater_id 
   
                                                    
                              and rownum = 1
                              order by t2.prd_date;
                --调出库,要扣减库存
                        --需求量
                        V_REQUEST := config.move_amount;--调拨量
                        --满足量
                        V_COMPLETED:=0;
                        while V_COMPLETED <> V_REQUEST /*如果需求未被满足,则持续循环扣减*/
                        loop  
                              --记录ID
                              V_NEWID :=sys_guid();                            
                              --扣减库存
                              insert into MTR_B_STOCK_DATA
                              (
                                id,
                                mater_id,
                                spec,
                                amount,
                                pkg_amount,
                                unit_id,
                                price,
                                money,
                                batch_code,
                                prd_id,
                                prd_date,
                                invalid_date,
                                stock_data_type_id,
                                ref_tab_name,
                                ref_tab_id,
                                retail_price,
                                stock_id,
                                create_date    
                              )
                              select 
                              V_NEWID,
                              t2.mater_id,
                              t2.spec,
                              --判断当前记录的库存量,如果大于等于未满足的需求量,则使用未满足需求量的值进行扣减
                              --否则,则使用当前记录的库存量进行扣减,且进入下一次循环
                              case 
                                when t2.amount >= (V_REQUEST - V_COMPLETED) then V_REQUEST * -1
                                else t2.amount * -1 
                              end,
                              t2.pkg_amount,
                              t2.unit_id,
                              t2.price,
                              t2.money,
                              t2.batch_code,
                              t2.prd_id,
                              t2.prd_date,
                              t2.invalid_date,
                              t2.stock_data_type_id,
                              'MTR_B_STOCK_DATA_MOVE_D',
                              config.id,
                              t2.retail_price,
                              config.from_stock_id,--调出库
                              t2.create_date
                              from 
                              (
                                  select 
                                  t.stock_id, 
                                  t.mater_id,
                                  t.unit_id,
                                  t.stock_data_type_id,
                                  sum(t.amount) amount,
                                  t.prd_date,
                                  t.batch_code,
                                  t.prd_id,
                                  t.price,
                                  t.spec
                                  from mtr_b_stock_data t 
                                  where 1=1
                                  group by --口径与库存视图(v_mtr_stock_data)一致
                                  t.stock_id,
                                  t.mater_id,
                                  t.unit_id,
                                  t.stock_data_type_id,
                                  t.prd_date,
                                  t.batch_code,
                                  t.prd_id,
                                  t.price,
                                  t.spec
                              )
                              t1, --库存数据分组合计
                              (
                                  select 
                                  id,
                                  mater_id,
                                  spec,
                                  amount,
                                  pkg_amount,
                                  unit_id,
                                  price,
                                  money,
                                  batch_code,
                                  prd_id,
                                  prd_date,
                                  invalid_date,
                                  stock_data_type_id,
                                  ref_tab_name,
                                  ref_tab_id,
                                  retail_price,
                                  stock_id,
                                  create_date   
                                  from mtr_b_stock_data t
                                  where t.amount > 0 
                                  order by t.prd_date 
                              ) t2 --库存数据先进先出
                              where
                                  t1.mater_id = t2.mater_id
                              and t1.stock_id = t2.stock_id
                              and t1.stock_data_type_id = t2.stock_data_type_id
                              and t1.prd_date = t2.prd_date
                              /*
                              and t1.prd_id = t2.prd_id
                              and t1.spec = t2.spec
                              and t1.batch_code = t2.batch_code
                              and t1.unit_id = t2.unit_id*/
                              and t1.amount >0
                              
                              and t2.stock_id = config.from_stock_id --从调出库取库存
                              and t2.stock_data_type_id = config.stock_data_type_id                             
                              and t2.mater_id = config.mater_id                              
                                                           
                                                    
                              and rownum = 1
                              order by t2.prd_date;

                              --更新满足量
                              select amount * -1 into V_COMPLETED 
                              from MTR_B_STOCK_DATA 
                              where id = V_NEWID;
                        end loop;
           
              end loop;      
      --更新出库单状态为已审核
      update MTR_B_STOCK_data_move set state = 3 where id = p_planid;
      
      commit;
      p_msg:= '';
      p_succeed := 1;--返回成功
exception
      when others
        then
        v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        /*写失败标志*/
        p_succeed := 0;
        rollback;
END SP_mtr_Audit_stockdatamove;


create or replace procedure SP_mtr_create_instock_req_sum(p_planid in char,p_msg out varchar2,p_succeed out number )
Authid Current_User 
 as
V_DYNA_SQL clob;
V_EXEC_SQL clob;
V_STATE number(3);
V_PRE_BUDGET_YEAR char(36);
V_TEMP_TAB varchar2(50);
V_BUDGET_CPN_ID char(36);
V_BUDGET_TEMPLET_ID char(36);
v_ErrorCode varchar2(1024);
v_ErrorMsg varchar2(1024);
v_CurrentUser varchar2(1024);
v_Information varchar2(1024);
v_PATTERN char(36);
V_LEVEL char(36);
/*
1、汇总所有已审核的部门入库计划申请（MTR_B_instock_req）
*/
begin
    --初始化变量
    execute immediate 'select ''TEMP_REQ'' from dual' into V_TEMP_TAB;
    dbms_output.put_line(V_TEMP_TAB);
    --清空跟踪表
    execute immediate ' delete from MTR_B_INSTOCK_REQ_SUM_C where base_id='''||p_planid||'''';
    --清空明细表
    execute immediate ' delete from MTR_B_INSTOCK_REQ_SUM_d where base_id='''||p_planid||'''';
    --创建事务级临时表
    execute immediate 'CREATE GLOBAL TEMPORARY TABLE '||V_TEMP_TAB||'
     (
        id              CHAR(36) not null,
        mater_id        CHAR(36),
        spec            VARCHAR2(50),
        apply_amount    NUMBER(22,4),
        approved_amount NUMBER(22,4),
        unit_id         CHAR(36),
        pkg_amount      NUMBER(22,4),
        price           NUMBER(22,4),
        money           NUMBER(22,4),
        comments        VARCHAR2(200)    
     )ON COMMIT DELETE ROWS';
    --取所有已审核状态的部门入库计划申请（MTR_B_instock_req）
    for config in(
                    select
                    t.id
                    from  MTR_B_instock_req t
                    where t.state = 3
                  )
          loop
             --向临时表中插入输入
             execute immediate 'insert into '||V_TEMP_TAB||'(id,mater_id,spec,apply_amount,approved_amount,
             unit_id,pkg_amount,price,money,comments)
             select d.id,d.mater_id,d.spec,
             d.apply_amount,d.approved_amount,d.unit_id,
             d.pkg_amount,d.price,d.money,d.comments 
             from MTR_B_instock_req_d d where d.base_id = '''|| config.id||'''';
             --向跟踪表插入
             execute immediate 'insert into MTR_B_INSTOCK_REQ_SUM_C(id,base_id,ref_tab_name,ref_tab_id)
             select sys_guid(), '''||p_planid||''',''MTR_B_instock_req'','''||config.id||''' from dual';
          end loop;
          --向明细表插入          
          execute immediate 'insert into 
          MTR_B_INSTOCK_REQ_SUM_d
          (
            id,
            base_id,
            mater_id,
            apply_amount,
            approved_amount,
            price,
            money,
            comments
            )
             select sys_guid(), 
             '''||p_planid||''',
             mater_id,
             sum(apply_amount),
             sum(apply_amount),
             0,
             0,
             ''''
             from '||V_TEMP_TAB||'
             group by '''||p_planid||''',
             mater_id';
             --删除临时表
             execute immediate 'Drop  TABLE '||V_TEMP_TAB; 
             --更新明细记录中的库存数量
             for config in(
                select
                t.id
                from  MTR_B_INSTOCK_REQ_SUM_d t
                where t.base_id = p_planid
              )
              loop  
                update MTR_B_INSTOCK_REQ_SUM_d d
                set d.stock_amount =
                (
                 select nvl(sum(v.amount),0) from v_mtr_stock_data v
                 where v.mater_id = d.mater_id
                 and v.stock_data_type_id = '00400001'
                 and v.stock_id in 
                     (
                     select id from mdm_d_stock s
                     where stock_type_id = '00320001'
                     )
                ),
                d.spec = (select spec from mtr_d_mtr where id = d.mater_id),
                d.unit_id = (select unit_id from mtr_d_mtr where id = d.mater_id),
                d.pkg_amount = (select pkg_amount from mtr_d_mtr where id = d.mater_id)
                where d.id = config.id;
              end loop;   
      commit;
      p_msg:= '';
      p_succeed := 1;--返回成功
exception
      when others
        then
        v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        /*写失败标志*/
        p_succeed := 0;
        rollback;
END SP_mtr_create_instock_req_sum;




create or replace procedure SP_mtr_create_stockdata_chk_d(p_planid in char,p_msg out varchar2,p_succeed out number )
Authid Current_User 
 as
V_DYNA_SQL clob;
V_EXEC_SQL clob;
V_ROWCOUNT number(3);
V_PRE_BUDGET_YEAR char(36);
V_TEMP_TAB varchar2(50);
V_BUDGET_CPN_ID char(36);
V_BUDGET_TEMPLET_ID char(36);
v_ErrorCode varchar2(1024);
v_ErrorMsg varchar2(1024);
v_CurrentUser varchar2(1024);
v_Information varchar2(1024);
v_PATTERN char(36);
V_LEVEL char(36);
/*
1、生成盘点数据清单（MTR_B_STOCK_DATA_CHECK_D）
2、如果按类型盘点设置存在，则只生成指定类型的盘点数据(MTR_B_STOCK_DATA_CHECK_type)
*/
begin
      --删除记录
      delete from MTR_B_STOCK_DATA_CHECK_D where base_id=p_planid;
      --组织语句
      V_EXEC_SQL := '
      insert into MTR_B_STOCK_DATA_CHECK_D
      (
          id ,
          base_id,
          mater_id ,
          spec,
          amount,
          pkg_amount,
          unit_id,
          batch_code,
          prd_id,
          comments,
          check_amount,
          diff_amount
      )
      select sys_guid(),
      c.id,
      t.mater_id,
      t.spec,
      t.amount,
      t.pkg_amount,
      t.unit_id,
      t.batch_code,
      t.prd_id,
      null,
      0,
      0      
      from v_mtr_stock_data t,
      MTR_B_STOCK_DATA_CHECK c,
      mtr_d_mtr_type mt,
      mtr_d_mtr m
      where t.stock_id = c.stock_id
      and t.stock_data_type_id = c.stock_data_type_id
      and c.id='''||p_planid||'''
      and t.mater_id = m.id
      and m.type_id = mt.id ';
      --检查是否存在物资类型设置
      select count(*) into V_ROWCOUNT from MTR_B_STOCK_DATA_CHECK_type where base_id = p_planid;
      if V_ROWCOUNT > 0 then
         begin
            V_EXEC_SQL := V_EXEC_SQL || ' and mt.id in
      (
          select ct.type_id from MTR_B_STOCK_DATA_CHECK_type ct
          where ct.base_id = '''||p_planid||'''
      )';
         end;
      end if;
      dbms_output.put_line (V_EXEC_SQL);      
      --新增记录
      execute immediate  V_EXEC_SQL;  
      commit;
      p_msg:= '';
      p_succeed := 1;--返回成功
exception
      when others
        then
        v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        /*写失败标志*/
        p_succeed := 0;
        rollback;
END SP_mtr_create_stockdata_chk_d;

create or replace procedure SP_mtr_create_stockdata_move_d(p_planid in char,p_msg out varchar2,p_succeed out number )
Authid Current_User
 as
V_DYNA_SQL clob;
V_EXEC_SQL clob;
V_ROWCOUNT number(3);
V_PRE_BUDGET_YEAR char(36);
V_TEMP_TAB varchar2(50);
V_BUDGET_CPN_ID char(36);
V_BUDGET_TEMPLET_ID char(36);
v_ErrorCode varchar2(1024);
v_ErrorMsg varchar2(1024);
v_CurrentUser varchar2(1024);
v_Information varchar2(1024);
v_PATTERN char(36);
V_LEVEL char(36);
/*
1、生成调拨数据清单（MTR_B_STOCK_DATA_MOVE_D）
*/
begin
      --删除记录
      delete from MTR_B_STOCK_DATA_MOVE_D where base_id=p_planid;
      --组织语句

      insert into MTR_B_STOCK_DATA_MOVE_D
      (
        id ,
        base_id,
        mater_id,
        spec ,
        amount,
        pkg_amount,
        unit_id,
        price,
        money ,
        batch_code,
        prd_id ,
        prd_date ,
        invalid_date,
        comments,
        move_amount
      )
      select sys_guid(),
      b.id,
      t.mater_id,
      t.spec,
      t.amount,
      t.pkg_amount,
      t.unit_id,
      t.price,
      t.money,
      t.batch_code,
      t.prd_id,
      t.prd_date,
      t.invalid_date,
      null,
      0
      from v_mtr_stock_data t,
      MTR_B_STOCK_DATA_MOVE b--,
      --mtr_d_mtr_type mt,
      --mtr_d_mtr m
      where t.stock_id = b.from_stock_id
      and t.stock_data_type_id = b.stock_data_type_id
      and b.id= p_planid;
      --and t.mater_id = m.id
      --and m.type_id = mt.id;

      commit;
      p_msg:= '';
      p_succeed := 1;--返回成功
exception
      when others
        then
        v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        /*写失败标志*/
        p_succeed := 0;
        rollback;
END SP_mtr_create_stockdata_move_d;




--2015-11-24:叶杨追加
-- Create table
create table MTR_D_FEE_ITEM
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  name             VARCHAR2(50),
  is_medicinal     CHAR(36),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_dept_id   CHAR(36),
  create_time      DATE,
  modify_user_id   CHAR(36),
  modify_dept_id   CHAR(36),
  modify_time      DATE,
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36)
);
-- Add comments to the columns 
comment on column MTR_D_FEE_ITEM.id
  is '主键';
comment on column MTR_D_FEE_ITEM.code
  is '代码';
comment on column MTR_D_FEE_ITEM.name
  is '名称';
comment on column MTR_D_FEE_ITEM.is_medicinal
  is '是否药品';
comment on column MTR_D_FEE_ITEM.state
  is '状态';
comment on column MTR_D_FEE_ITEM.comments
  is '备注';
-- Create/Recreate primary, unique and foreign key constraints 
alter table MTR_D_FEE_ITEM
  add constraint PK_MTR_D_FEE_ITEM primary key (ID);
  
  --2015-11-25:叶杨追加:修改库存查询视图
  create or replace view v_mtr_stock_data as
select t.stock_id,
mater_id,
t.spec,
t.amount,
t.pkg_amount,
t.unit_id,
t.price,
t.money,
t.batch_code,
t.stock_data_type_id,
t.prd_id,t.prd_date
from
(
select
stock_id,
mater_id,
spec,
sum(amount) as amount,
pkg_amount,
unit_id,
price,
sum(money) as money,
batch_code,
stock_data_type_id,
prd_id,
prd_date
from mtr_b_stock_data
group by
stock_id,
mater_id,
spec,
unit_id,
price,
batch_code,
stock_data_type_id,
prd_id,
prd_date,
pkg_amount)
t where t.amount  > 0;



-- Create table
create table MTR_B_OUTSTOCK_APPLY
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  create_date      DATE,
  apply_dept_id    CHAR(36),
  apply_user_id    CHAR(36),
  purpose          VARCHAR2(50),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_dept_id   CHAR(36),
  create_time      DATE,
  modify_user_id   CHAR(36),
  modify_dept_id   CHAR(36),
  modify_time      DATE,
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36)
);
-- Add comments to the columns 
comment on column MTR_B_OUTSTOCK_APPLY.code
  is '单号';
comment on column MTR_B_OUTSTOCK_APPLY.create_date
  is '申请日期';
comment on column MTR_B_OUTSTOCK_APPLY.apply_dept_id
  is '申领科室';
comment on column MTR_B_OUTSTOCK_APPLY.apply_user_id
  is '申领人';
comment on column MTR_B_OUTSTOCK_APPLY.purpose
  is '用途';
-- Create/Recreate primary, unique and foreign key constraints 
alter table MTR_B_OUTSTOCK_APPLY
  add constraint PK_MTR_B_OUTSTOCK_APPLY primary key (ID);


-- Create table
create table MTR_B_OUTSTOCK_APPLY_D
(
  id           CHAR(36) not null,
  base_id      CHAR(36),
  mater_id     CHAR(36),
  spec         VARCHAR2(50),
  unit_id      CHAR(36),
  amount       NUMBER(22,4),
  comments     VARCHAR2(200),
  stock_amount NUMBER(22,4)
);
-- Add comments to the columns 
comment on column MTR_B_OUTSTOCK_APPLY_D.mater_id
  is '物资';
comment on column MTR_B_OUTSTOCK_APPLY_D.spec
  is '规格';
comment on column MTR_B_OUTSTOCK_APPLY_D.unit_id
  is '单位';
comment on column MTR_B_OUTSTOCK_APPLY_D.amount
  is '数量';
comment on column MTR_B_OUTSTOCK_APPLY_D.comments
  is '备注';
comment on column MTR_B_OUTSTOCK_APPLY_D.stock_amount
  is '库存';
-- Create/Recreate primary, unique and foreign key constraints 
alter table MTR_B_OUTSTOCK_APPLY_D
  add constraint PK_MTR_B_OUTSTOCK_APPLY_D primary key (ID)
  ;
alter table MTR_B_OUTSTOCK_APPLY_D
  add constraint FK_MTR_B_OUTSTOCK_APPLY_D_B foreign key (BASE_ID)
  references MTR_B_OUTSTOCK_APPLY (ID) on delete cascade;




  --2015-11-25;陈镜宇追加:增加物资扩展类型与扩展信息
create table MTR_D_MTR_TYPE_C
(
  id         CHAR(36) not null,
  base_id    CHAR(36),
  code       VARCHAR2(50),
  name       VARCHAR2(50),
  type_id    CHAR(36),
  collection VARCHAR2(256)
)
;
comment on column MTR_D_MTR_TYPE_C.id
  is '主键';
comment on column MTR_D_MTR_TYPE_C.base_id
  is '主表主键';
comment on column MTR_D_MTR_TYPE_C.code
  is '编码';
comment on column MTR_D_MTR_TYPE_C.name
  is '名称';
comment on column MTR_D_MTR_TYPE_C.type_id
  is '数据类型';
comment on column MTR_D_MTR_TYPE_C.collection
  is '集合数据';
alter table MTR_D_MTR_TYPE_C
  add constraint PK_MTR_D_MTR_TYPE_C primary key (ID);
alter table MTR_D_MTR_TYPE_C
  add constraint FK_MTR_D_MTR_TYPE_C_B foreign key (BASE_ID)
  references MTR_D_MTR_TYPE (ID) on delete cascade;

create table MTR_D_MTR_EXT
(
  id      CHAR(36) not null,
  base_id CHAR(36),
  type_id CHAR(36),
  value   VARCHAR2(200)
)
;
comment on column MTR_D_MTR_EXT.id
  is '主键';
comment on column MTR_D_MTR_EXT.base_id
  is '主表主键';
comment on column MTR_D_MTR_EXT.type_id
  is '物资分类属性';
comment on column MTR_D_MTR_EXT.value
  is '属性值';
alter table MTR_D_MTR_EXT
  add constraint PK_MTR_D_MTR_EXT primary key (ID);
alter table MTR_D_MTR_EXT
  add constraint FK_MTR_D_MTR_EXT_B foreign key (BASE_ID)
  references MTR_D_MTR (ID) on delete cascade;



  --2015-11-25:陈镜宇追加:增加出入库物资条码  
create table MTR_B_INSTOCK_D_SEQ
(
  id         CHAR(36) not null,
  base_id    CHAR(36),
  seq_number VARCHAR2(50)
)
;
comment on column MTR_B_INSTOCK_D_SEQ.id
  is '主键';
comment on column MTR_B_INSTOCK_D_SEQ.base_id
  is '主表主键';
comment on column MTR_B_INSTOCK_D_SEQ.seq_number
  is '物资条码';
alter table MTR_B_INSTOCK_D_SEQ
  add constraint PK_MTR_B_INSTOCK_D_SEQ primary key (ID);
alter table MTR_B_INSTOCK_D_SEQ
  add constraint FK_MTR_B_INSTOCK_D_SEQ_B foreign key (BASE_ID)
  references MTR_B_INSTOCK_D (ID) on delete cascade;

create table MTR_B_OUTSTOCK_D_SEQ
(
  id         CHAR(36) not null,
  base_id    CHAR(36),
  seq_number VARCHAR2(50)
)
;
comment on column MTR_B_OUTSTOCK_D_SEQ.id
  is '主键';
comment on column MTR_B_OUTSTOCK_D_SEQ.base_id
  is '主表主键';
comment on column MTR_B_OUTSTOCK_D_SEQ.seq_number
  is '物资条码';
alter table MTR_B_OUTSTOCK_D_SEQ
  add constraint PK_MTR_B_OUTSTOCK_D_SEQ primary key (ID);
alter table MTR_B_OUTSTOCK_D_SEQ
  add constraint FK_MTR_B_OUTSTOCK_D_SEQ_B foreign key (BASE_ID)
  references MTR_B_OUTSTOCK_D (ID) on delete cascade;
  
  

  --2015-11-25:陈镜宇追加:增加组合物资明细
  --2015-11-27:叶杨修改
create table MTR_D_MTR_C
(
  id       CHAR(36) not null,
  base_id  CHAR(36),
  mater_id CHAR(36),
  amount   NUMBER(22,4),
  unit_id  CHAR(36),
  comments VARCHAR2(200),
  spec     VARCHAR2(50)
);
-- Add comments to the columns 
comment on column MTR_D_MTR_C.id
  is '主键';
comment on column MTR_D_MTR_C.base_id
  is '主表主键';
comment on column MTR_D_MTR_C.mater_id
  is '物资名称';
comment on column MTR_D_MTR_C.amount
  is '数量';
comment on column MTR_D_MTR_C.unit_id
  is '单位';
comment on column MTR_D_MTR_C.comments
  is '备注';
comment on column MTR_D_MTR_C.spec
  is '物资规格';
-- Create/Recreate primary, unique and foreign key constraints 
alter table MTR_D_MTR_C
  add constraint PK_MTR_D_MTR_C primary key (ID);
alter table MTR_D_MTR_C
  add constraint FK_MTR_D_MTR_C_B foreign key (BASE_ID)
  references MTR_D_MTR (ID) on delete cascade;
  
 --2015-11-27 叶杨新增
 --2015-12-02:陈镜宇修改
 create or replace procedure SP_mtr_Audit_outstock_Apply(p_planid in char,p_msg out varchar2,p_succeed out number )
Authid Current_User 
 as
V_DYNA_SQL clob;
V_EXEC_SQL clob;
V_STATE number(3);
V_NEWID char(36);
V_TEMP_TAB varchar2(50);
V_REQUEST number(22,4);
V_COMPLETED number(22,4);
V_BUDGET_CPN_ID char(36);
V_BUDGET_TEMPLET_ID char(36);
v_ErrorCode varchar2(1024);
v_ErrorMsg varchar2(1024);
v_CurrentUser varchar2(1024);
v_Information varchar2(1024);
v_PATTERN char(36);
V_LEVEL char(36);
/*
1、更新出库申请单的状态为已审核（MTR_B_OUTSTOCK_apply）
2、生成对应仓库（根据申领物资所属物资类型和仓库定义中规定的物资存放类型之间的对应关系）的物资出库单,状态为编辑中(MTR_B_OUTSTOCK)
3、生成财务凭证/成本数据(待集成实现)
*/
begin   
      for config in(
                    select 
                    t.stock_id as stock_id
                    from
                    MTR_B_OUTSTOCK_APPLY_D_STOCK t,
                    MTR_B_OUTSTOCK_APPLY b,
                    MTR_B_OUTSTOCK_APPLY_D d
                    where
                    b.id = p_planid
                    and d.base_id = b.id
                    and t.base_id = d.id
                    and t.amount <> 0
                    group by
                    t.stock_id /*按仓库分组*/
                  )
              loop
                 --创建出库单
                 select sys_guid into V_NEWID from dual;
                 
                 insert into MTR_B_OUTSTOCK
                 (
                        id,
                        code,
                        create_date,
                        outstock_type_id,
                        stock_id,
                        use_dept_id,
                        use_user_id,
                        purpose,
                        state,
                        comments,
                        create_user_id,
                        create_dept_id,
                        create_time,
                        data_organise_id
                 )
                 select 
                  V_NEWID,
                  t.code,
                  sysdate(),
                  '00430001', --普通出库
                  config.stock_id,--目标仓库
                  apply_dept_id ,
                  apply_user_id ,
                  purpose ,
                  1 ,
                  comments,
                  create_user_id ,
                  create_dept_id  ,
                  sysdate() ,
                  data_organise_id 
                  from MTR_B_OUTSTOCK_APPLY t
                  where t.id = p_planid;
                  --创建出库单明细
                  insert into MTR_B_OUTSTOCK_D
                  (
                    id ,
                    base_id ,
                    mater_id,
                    spec  ,
                    amount ,  
                    unit_id,  
                    comments,
                    ref_tab_name,
                    ref_tab_id
                  )
                  select 
                  sys_guid() ,
                  V_NEWID,--关联主表
                  t.mater_id,
                  t.spec  ,
                  s.amount ,  
                  t.unit_id,  
                  t.comments,
                  'MTR_B_OUTSTOCK_APPLY_D' ,
                  t.id
                  from MTR_B_OUTSTOCK_APPLY_D t,MTR_B_OUTSTOCK_APPLY_D_STOCK S
                  where 
                  t.base_id = p_planid
                  and s.stock_id = config.stock_id
                  and s.base_id = t.id
                  and s.amount <> 0 /*仅限当前仓库存放的所有物资类型下的物资*/
                  ;
                  
              end loop;      
      --更新出库申请单状态为已审核
      update MTR_B_OUTSTOCK_APPLY set state = 3 where id = p_planid;
      
      commit;
      p_msg:= '';
      p_succeed := 1;--返回成功
exception
      when others
        then
        v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        /*写失败标志*/
        p_succeed := 0;
        rollback;
END SP_mtr_Audit_outstock_Apply;




--2015-12-02:陈镜宇新增:出库申请明细仓库表
create table MTR_B_OUTSTOCK_APPLY_D_STOCK
(
  id           CHAR(36) not null,
  base_id      CHAR(36),
  stock_id     CHAR(36),
  amount       NUMBER(22,4),
  stock_amount NUMBER(22,4)
)
;
comment on column MTR_B_OUTSTOCK_APPLY_D_STOCK.id
  is '主键';
comment on column MTR_B_OUTSTOCK_APPLY_D_STOCK.base_id
  is '主表主键';
comment on column MTR_B_OUTSTOCK_APPLY_D_STOCK.stock_id
  is '出库仓库';
comment on column MTR_B_OUTSTOCK_APPLY_D_STOCK.amount
  is '出库数量';
comment on column MTR_B_OUTSTOCK_APPLY_D_STOCK.stock_amount
  is '库存数量';
alter table MTR_B_OUTSTOCK_APPLY_D_STOCK
  add constraint PK_MTR_B_OUTSTOCK_APPLY_D_S primary key (ID);
alter table MTR_B_OUTSTOCK_APPLY_D_STOCK
  add constraint FK_MTR_B_OUTSTOCK_APPLY_D_S_B foreign key (BASE_ID)
  references MTR_B_OUTSTOCK_APPLY_D (ID) on delete cascade;
  
  
  
  --2015-12-06:陈镜宇:退库与明细
create table MTR_B_CANCEL_STOCK
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  create_date      DATE,
  user_id          CHAR(36),
  stock_id         CHAR(36),
  use_dept_id      CHAR(36),
  use_user_id      CHAR(36),
  summary          VARCHAR2(200),
  comments         VARCHAR2(200),
  state            NUMBER(3),
  create_user_id   CHAR(36),
  create_time      DATE,
  create_depart_id CHAR(36),
  modify_user_id   CHAR(36),
  modify_time      DATE,
  modify_depart_id CHAR(36),
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36),
  cancel_type_id   CHAR(36)
)
;
comment on column MTR_B_CANCEL_STOCK.id
  is '主键';
comment on column MTR_B_CANCEL_STOCK.code
  is '单号';
comment on column MTR_B_CANCEL_STOCK.create_date
  is '退库日期';
comment on column MTR_B_CANCEL_STOCK.user_id
  is '退库人';
comment on column MTR_B_CANCEL_STOCK.stock_id
  is '退库库仓库';
comment on column MTR_B_CANCEL_STOCK.use_dept_id
  is '领用科室';
comment on column MTR_B_CANCEL_STOCK.use_user_id
  is '领用人';
comment on column MTR_B_CANCEL_STOCK.summary
  is '说明';
comment on column MTR_B_CANCEL_STOCK.comments
  is '备注';
comment on column MTR_B_CANCEL_STOCK.state
  is '状态';
comment on column MTR_B_CANCEL_STOCK.create_user_id
  is '创建用户';
comment on column MTR_B_CANCEL_STOCK.create_time
  is '创建时间';
comment on column MTR_B_CANCEL_STOCK.create_depart_id
  is '创建部门';
comment on column MTR_B_CANCEL_STOCK.modify_user_id
  is '修改用户';
comment on column MTR_B_CANCEL_STOCK.modify_time
  is '修改时间';
comment on column MTR_B_CANCEL_STOCK.modify_depart_id
  is '修改部门';
comment on column MTR_B_CANCEL_STOCK.data_timestamp
  is '时间戳';
comment on column MTR_B_CANCEL_STOCK.data_organise_id
  is '数据标识';
comment on column MTR_B_CANCEL_STOCK.cancel_type_id
  is '退库类型';
alter table MTR_B_CANCEL_STOCK
  add constraint PK_MTR_B_CANCEL_STOCK primary key (ID);


create table MTR_B_CANCEL_STOCK_D
(
  id              CHAR(36) not null,
  base_id         CHAR(36),
  mater_id        CHAR(36),
  spec            VARCHAR2(50),
  unit_id         CHAR(36),
  pkg_amount      NUMBER(22,4),
  amount          NUMBER(22,4),
  outstock_amount NUMBER(22,4),
  price           NUMBER(22,4),
  retail_price    NUMBER(22,4),
  money           NUMBER(22,4),
  retail_money    NUMBER(22,4),
  batch_code      VARCHAR2(50),
  prd_id          CHAR(36),
  prd_date        DATE,
  invalid_date    DATE,
  comments        VARCHAR2(200),
  ref_tab_name    VARCHAR2(50),
  ref_tab_id      CHAR(36)
)
;
comment on column MTR_B_CANCEL_STOCK_D.id
  is '主键';
comment on column MTR_B_CANCEL_STOCK_D.base_id
  is '主表主键';
comment on column MTR_B_CANCEL_STOCK_D.mater_id
  is '物资名称';
comment on column MTR_B_CANCEL_STOCK_D.spec
  is '物资规格';
comment on column MTR_B_CANCEL_STOCK_D.unit_id
  is '单位';
comment on column MTR_B_CANCEL_STOCK_D.pkg_amount
  is '包装数量';
comment on column MTR_B_CANCEL_STOCK_D.amount
  is '数量';
comment on column MTR_B_CANCEL_STOCK_D.outstock_amount
  is '库存';
comment on column MTR_B_CANCEL_STOCK_D.price
  is '价格';
comment on column MTR_B_CANCEL_STOCK_D.retail_price
  is '零售价格';
comment on column MTR_B_CANCEL_STOCK_D.money
  is '金额';
comment on column MTR_B_CANCEL_STOCK_D.retail_money
  is '零售金额';
comment on column MTR_B_CANCEL_STOCK_D.batch_code
  is '批次';
comment on column MTR_B_CANCEL_STOCK_D.prd_id
  is '生产厂家';
comment on column MTR_B_CANCEL_STOCK_D.prd_date
  is '生产日期';
comment on column MTR_B_CANCEL_STOCK_D.invalid_date
  is '有效期';
comment on column MTR_B_CANCEL_STOCK_D.comments
  is '备注';
comment on column MTR_B_CANCEL_STOCK_D.ref_tab_name
  is '触发表名';
comment on column MTR_B_CANCEL_STOCK_D.ref_tab_id
  is '触发记录';
alter table MTR_B_CANCEL_STOCK_D
  add constraint PK_MTR_B_CANCEL_STOCK_D primary key (ID);
alter table MTR_B_CANCEL_STOCK_D
  add constraint FK_MTR_B_CANCEL_STOCK_D_B foreign key (BASE_ID)
  references MTR_B_CANCEL_STOCK (ID) on delete cascade;



  --2015-12-06:陈镜宇:退货与明细
create table MTR_B_SALES_RETURN
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  create_date      DATE,
  user_id          CHAR(36),
  stock_id         CHAR(36),
  provider_id      CHAR(36),
  summary          VARCHAR2(200),
  comments         VARCHAR2(200),
  state            NUMBER(3),
  create_user_id   CHAR(36),
  create_time      DATE,
  create_depart_id CHAR(36),
  modify_user_id   CHAR(36),
  modify_time      DATE,
  modify_depart_id CHAR(36),
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36),
  return_type_id   CHAR(36)
)
;
comment on column MTR_B_SALES_RETURN.id
  is '主键';
comment on column MTR_B_SALES_RETURN.code
  is '单号';
comment on column MTR_B_SALES_RETURN.create_date
  is '退货日期';
comment on column MTR_B_SALES_RETURN.user_id
  is '退货人';
comment on column MTR_B_SALES_RETURN.stock_id
  is '退货仓库';
comment on column MTR_B_SALES_RETURN.provider_id
  is '供货公司';
comment on column MTR_B_SALES_RETURN.summary
  is '说明';
comment on column MTR_B_SALES_RETURN.comments
  is '备注';
comment on column MTR_B_SALES_RETURN.state
  is '状态';
comment on column MTR_B_SALES_RETURN.create_user_id
  is '创建用户';
comment on column MTR_B_SALES_RETURN.create_time
  is '创建时间';
comment on column MTR_B_SALES_RETURN.create_depart_id
  is '创建部门';
comment on column MTR_B_SALES_RETURN.modify_user_id
  is '修改用户';
comment on column MTR_B_SALES_RETURN.modify_time
  is '修改时间';
comment on column MTR_B_SALES_RETURN.modify_depart_id
  is '修改部门';
comment on column MTR_B_SALES_RETURN.data_timestamp
  is '时间戳';
comment on column MTR_B_SALES_RETURN.data_organise_id
  is '数据标识';
comment on column MTR_B_SALES_RETURN.return_type_id
  is '退货类型';
alter table MTR_B_SALES_RETURN
  add constraint PK_MTR_B_SALES_RETURN primary key (ID);


create table MTR_B_SALES_RETURN_D
(
  id             CHAR(36) not null,
  base_id        CHAR(36),
  mater_id       CHAR(36),
  spec           VARCHAR2(50),
  pkg_amount     NUMBER(22,4),
  amount         NUMBER(22,4),
  instock_amount NUMBER(22,4),
  unit_id        CHAR(36),
  price          NUMBER(22,4),
  money          NUMBER(22,4),
  batch_code     VARCHAR2(50),
  prd_id         CHAR(36),
  prd_date       DATE,
  invalid_date   DATE,
  comments       VARCHAR2(200),
  ref_tab_name   VARCHAR2(50),
  ref_tab_id     CHAR(36)
)
;
comment on column MTR_B_SALES_RETURN_D.id
  is '主键';
comment on column MTR_B_SALES_RETURN_D.base_id
  is '主表主键';
comment on column MTR_B_SALES_RETURN_D.mater_id
  is '物资名称';
comment on column MTR_B_SALES_RETURN_D.spec
  is '物资规格';
comment on column MTR_B_SALES_RETURN_D.pkg_amount
  is '包装数量';
comment on column MTR_B_SALES_RETURN_D.amount
  is '数量';
comment on column MTR_B_SALES_RETURN_D.instock_amount
  is '入库数量';
comment on column MTR_B_SALES_RETURN_D.unit_id
  is '单位';
comment on column MTR_B_SALES_RETURN_D.price
  is '价格';
comment on column MTR_B_SALES_RETURN_D.money
  is '金额';
comment on column MTR_B_SALES_RETURN_D.batch_code
  is '批次';
comment on column MTR_B_SALES_RETURN_D.prd_id
  is '生产厂家';
comment on column MTR_B_SALES_RETURN_D.prd_date
  is '生产日期';
comment on column MTR_B_SALES_RETURN_D.invalid_date
  is '有效期';
comment on column MTR_B_SALES_RETURN_D.comments
  is '备注';
comment on column MTR_B_SALES_RETURN_D.ref_tab_name
  is '触发表名';
comment on column MTR_B_SALES_RETURN_D.ref_tab_id
  is '触发记录';
alter table MTR_B_SALES_RETURN_D
  add constraint PK_MTR_B_SALES_RETURN_D primary key (ID);
alter table MTR_B_SALES_RETURN_D
  add constraint FK_MTR_B_SALES_RETURN_D_B foreign key (BASE_ID)
  references MTR_B_SALES_RETURN (ID) on delete cascade;
  
  
  
  --2015-12-11:陈镜宇:新增物资模版与明细
  create table MTR_D_USER_SCHEME
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  name             VARCHAR2(50),
  summary          VARCHAR2(200),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_time      DATE,
  create_depart_id CHAR(36),
  modify_user_id   CHAR(36),
  modify_time      DATE,
  modify_depart_id CHAR(36),
  data_timestamp   TIMESTAMP(6),
  data_organise_id CHAR(36)
)
;
comment on column MTR_D_USER_SCHEME.id
  is '主键';
comment on column MTR_D_USER_SCHEME.code
  is '编号';
comment on column MTR_D_USER_SCHEME.name
  is '名称';
comment on column MTR_D_USER_SCHEME.summary
  is '说明';
comment on column MTR_D_USER_SCHEME.state
  is '状态';
comment on column MTR_D_USER_SCHEME.comments
  is '备注';
comment on column MTR_D_USER_SCHEME.create_user_id
  is '创建用户';
comment on column MTR_D_USER_SCHEME.create_time
  is '创建时间';
comment on column MTR_D_USER_SCHEME.create_depart_id
  is '创建部门';
comment on column MTR_D_USER_SCHEME.modify_user_id
  is '修改用户';
comment on column MTR_D_USER_SCHEME.modify_time
  is '修改时间';
comment on column MTR_D_USER_SCHEME.modify_depart_id
  is '修改部门';
comment on column MTR_D_USER_SCHEME.data_timestamp
  is '时间戳';
comment on column MTR_D_USER_SCHEME.data_organise_id
  is '数据标识';
alter table MTR_D_USER_SCHEME
  add constraint PK_MTR_D_USER_SCHEME primary key (ID);


create table MTR_D_USER_SCHEME_D
(
  id         CHAR(36) not null,
  base_id    CHAR(36),
  mater_id   CHAR(36),
  spec       VARCHAR2(50),
  unit_id    CHAR(36),
  pkg_amount NUMBER(22,4),
  amount     NUMBER(22,4),
  prd_id     CHAR(36)
)
;
comment on column MTR_D_USER_SCHEME_D.id
  is '主键';
comment on column MTR_D_USER_SCHEME_D.base_id
  is '主表主键';
comment on column MTR_D_USER_SCHEME_D.mater_id
  is '物资名称';
comment on column MTR_D_USER_SCHEME_D.spec
  is '物资规格';
comment on column MTR_D_USER_SCHEME_D.unit_id
  is '单位';
comment on column MTR_D_USER_SCHEME_D.pkg_amount
  is '包装数量';
comment on column MTR_D_USER_SCHEME_D.amount
  is '数量';
comment on column MTR_D_USER_SCHEME_D.prd_id
  is '生产厂家';
alter table MTR_D_USER_SCHEME_D
  add constraint PK_MTR_D_USER_SCHEME_D primary key (ID);
alter table MTR_D_USER_SCHEME_D
  add constraint FK_MTR_D_USER_SCHEME_D_B foreign key (BASE_ID)
  references MTR_D_USER_SCHEME (ID) on delete cascade;
  
  

 
 --2015-12-15:陈镜宇新增:入库计划与明细 
  create table MTR_B_INSTOCK_PLAN
(
  id               CHAR(36) not null,
  create_date      DATE,
  dept_id          CHAR(36),
  user_id          CHAR(36),
  stock_id         CHAR(36),
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_time      DATE,
  create_depart_id CHAR(36),
  modify_user_id   CHAR(36),
  modify_time      DATE,
  modify_depart_id CHAR(36),
  data_timestamp   TIMESTAMP(6),
  code             VARCHAR2(50)
)
;
comment on column MTR_B_INSTOCK_PLAN.id
  is '主键';
comment on column MTR_B_INSTOCK_PLAN.create_date
  is '计划日期';
comment on column MTR_B_INSTOCK_PLAN.dept_id
  is '计划科室';
comment on column MTR_B_INSTOCK_PLAN.user_id
  is '计划人';
comment on column MTR_B_INSTOCK_PLAN.stock_id
  is '入库仓库';
comment on column MTR_B_INSTOCK_PLAN.state
  is '状态';
comment on column MTR_B_INSTOCK_PLAN.comments
  is '备注';
comment on column MTR_B_INSTOCK_PLAN.create_user_id
  is '创建用户';
comment on column MTR_B_INSTOCK_PLAN.create_time
  is '创建时间';
comment on column MTR_B_INSTOCK_PLAN.create_depart_id
  is '创建部门';
comment on column MTR_B_INSTOCK_PLAN.modify_user_id
  is '修改用户';
comment on column MTR_B_INSTOCK_PLAN.modify_time
  is '修改时间';
comment on column MTR_B_INSTOCK_PLAN.modify_depart_id
  is '修改部门';
comment on column MTR_B_INSTOCK_PLAN.data_timestamp
  is '时间戳';
comment on column MTR_B_INSTOCK_PLAN.code
  is '编码';
alter table MTR_B_INSTOCK_PLAN
  add constraint PK_MTR_B_INSTOCK_PLAN primary key (ID);


create table MTR_B_INSTOCK_PLAN_D
(
  id              CHAR(36) not null,
  base_id         CHAR(36),
  mater_id        CHAR(36),
  spec            VARCHAR2(50),
  apply_amount    NUMBER(22,4),
  approved_amount NUMBER(22,4),
  unit_id         CHAR(36),
  amount          NUMBER(22,4),
  pkg_amount      NUMBER(22,4),
  price           NUMBER(22,4),
  money           NUMBER(22,4),
  comments        VARCHAR2(200),
  delivery_date   DATE
)
;
comment on column MTR_B_INSTOCK_PLAN_D.id
  is '主键';
comment on column MTR_B_INSTOCK_PLAN_D.base_id
  is '主表主键';
comment on column MTR_B_INSTOCK_PLAN_D.mater_id
  is '物资名称';
comment on column MTR_B_INSTOCK_PLAN_D.spec
  is '规格';
comment on column MTR_B_INSTOCK_PLAN_D.apply_amount
  is '计划数量';
comment on column MTR_B_INSTOCK_PLAN_D.approved_amount
  is '核准数量';
comment on column MTR_B_INSTOCK_PLAN_D.unit_id
  is '单位';
comment on column MTR_B_INSTOCK_PLAN_D.amount
  is '库存数量';
comment on column MTR_B_INSTOCK_PLAN_D.pkg_amount
  is '包装数量';
comment on column MTR_B_INSTOCK_PLAN_D.price
  is '计划价格';
comment on column MTR_B_INSTOCK_PLAN_D.money
  is '计划金额';
comment on column MTR_B_INSTOCK_PLAN_D.comments
  is '备注';
comment on column MTR_B_INSTOCK_PLAN_D.delivery_date
  is '交货日期';
alter table MTR_B_INSTOCK_PLAN_D
  add constraint PK_MTR_B_INSTOCK_PLAN_D primary key (ID);
alter table MTR_B_INSTOCK_PLAN_D
  add constraint FK_MTR_B_INSTOCK_PLAN_D_B foreign key (BASE_ID)
  references MTR_B_INSTOCK_PLAN (ID) on delete cascade;



 --2015-12-20:陈镜宇新增:物资月结与明细

create table MTR_B_DATA_MONTH
(
  id               CHAR(36) not null,
  code             VARCHAR2(50),
  dept_id          CHAR(36),
  stock_id         CHAR(36),
  begin_date       DATE,
  end_date         DATE,
  state            NUMBER(3),
  comments         VARCHAR2(200),
  create_user_id   CHAR(36),
  create_time      DATE,
  create_depart_id CHAR(36),
  modify_user_id   CHAR(36),
  modify_time      DATE,
  modify_depart_id CHAR(36),
  data_timestamp   TIMESTAMP(6),
  finance_cycle    VARCHAR2(50)
)
;
comment on column MTR_B_DATA_MONTH.id
  is '主键';
comment on column MTR_B_DATA_MONTH.code
  is '流水号';
comment on column MTR_B_DATA_MONTH.dept_id
  is '科室名称';
comment on column MTR_B_DATA_MONTH.stock_id
  is '仓库名称';
comment on column MTR_B_DATA_MONTH.begin_date
  is '起始日期 ';
comment on column MTR_B_DATA_MONTH.end_date
  is '终止日期';
comment on column MTR_B_DATA_MONTH.state
  is '状态';
comment on column MTR_B_DATA_MONTH.comments
  is '备注';
comment on column MTR_B_DATA_MONTH.create_user_id
  is '创建用户';
comment on column MTR_B_DATA_MONTH.create_time
  is '创建时间';
comment on column MTR_B_DATA_MONTH.create_depart_id
  is '创建部门';
comment on column MTR_B_DATA_MONTH.modify_user_id
  is '修改用户';
comment on column MTR_B_DATA_MONTH.modify_time
  is '修改时间';
comment on column MTR_B_DATA_MONTH.modify_depart_id
  is '修改部门';
comment on column MTR_B_DATA_MONTH.data_timestamp
  is '时间戳';
comment on column MTR_B_DATA_MONTH.finance_cycle
  is '核算月份';
alter table MTR_B_DATA_MONTH
  add constraint PK_MTR_B_DATA_MONTH primary key (ID);

  
 
create table MTR_B_DATA_MONTH_MONEY
(
  id                 CHAR(36) not null,
  base_id            CHAR(36),
  stock_data_type_id CHAR(36),
  mater_id           CHAR(36),
  spec               VARCHAR2(50),
  pkg_amount         NUMBER(22,4),
  unit_id            CHAR(36),
  price              NUMBER(22,4),
  retail_price       NUMBER(22,4),
  batch_code         VARCHAR2(50),
  prd_id             CHAR(36),
  prd_date           DATE,
  invalid_date       DATE,
  begin_amount       NUMBER(22,4),
  begin_money        NUMBER(22,4),
  increase_amount    NUMBER(22,4),
  increase_money     NUMBER(22,4),
  reduce_amount      NUMBER(22,4),
  reduce_money       NUMBER(22,4),
  end_amount         NUMBER(22,4),
  end_money          NUMBER(22,4),
  comments           VARCHAR2(200)
)
;
comment on column MTR_B_DATA_MONTH_MONEY.id
  is '主键';
comment on column MTR_B_DATA_MONTH_MONEY.base_id
  is '主表主键';
comment on column MTR_B_DATA_MONTH_MONEY.stock_data_type_id
  is '库存数据类型';
comment on column MTR_B_DATA_MONTH_MONEY.mater_id
  is '物资名称';
comment on column MTR_B_DATA_MONTH_MONEY.spec
  is '物资规格';
comment on column MTR_B_DATA_MONTH_MONEY.pkg_amount
  is '包装数量';
comment on column MTR_B_DATA_MONTH_MONEY.unit_id
  is '单位';
comment on column MTR_B_DATA_MONTH_MONEY.price
  is '价格';
comment on column MTR_B_DATA_MONTH_MONEY.retail_price
  is '零售单价';
comment on column MTR_B_DATA_MONTH_MONEY.batch_code
  is '批次';
comment on column MTR_B_DATA_MONTH_MONEY.prd_id
  is '生产厂家';
comment on column MTR_B_DATA_MONTH_MONEY.prd_date
  is '生产日期';
comment on column MTR_B_DATA_MONTH_MONEY.invalid_date
  is '有效期';
comment on column MTR_B_DATA_MONTH_MONEY.begin_amount
  is '期初数据-数量';
comment on column MTR_B_DATA_MONTH_MONEY.begin_money
  is '期初数据-金额';
comment on column MTR_B_DATA_MONTH_MONEY.increase_amount
  is '本期增加-数量';
comment on column MTR_B_DATA_MONTH_MONEY.increase_money
  is '本期增加-金额';
comment on column MTR_B_DATA_MONTH_MONEY.reduce_amount
  is '本期减少-数量';
comment on column MTR_B_DATA_MONTH_MONEY.reduce_money
  is '本期减少-金额';
comment on column MTR_B_DATA_MONTH_MONEY.end_amount
  is '期末数据-数量';
comment on column MTR_B_DATA_MONTH_MONEY.end_money
  is '期末数据-金额';
comment on column MTR_B_DATA_MONTH_MONEY.comments
  is '备注';
alter table MTR_B_DATA_MONTH_MONEY
  add constraint PK_MTR_B_DATA_MONTH_MONEY primary key (ID);
alter table MTR_B_DATA_MONTH_MONEY
  add constraint FK_MTR_B_DATA_MONTH_MONEY_B foreign key (BASE_ID)
  references MTR_B_DATA_MONTH (ID) on delete cascade;
  
  
  
  /*以下为物资报表新增表过程-夏建国*/
  
 /*****************************************仓库科室领用汇总表‎（存储过程） BEGIN*******************************************************/ 
   /* 首先将查询显示的表结构创建出来 */
     create table TEMP_DEPARMENT_RECIVE_SUMMARY
     (
          CD_ID VARCHAR2(36),  
          CD_NAME VARCHAR2(50),      --科室
          MBO_ID VARCHAR2(50),       --单据数量
          MBOD_MONEY NUMBER(22,4),        --出库金额
          SESSION_ID CHAR(36)        --全局唯一标识
     );
     
     /* 若创建表时提示存在 请先删除  */
     DROP TABLE TEMP_DEPARMENT_RECIVE_SUMMARY
  
  
/*  创建存储过程 */  
create or replace procedure SP_TAB_DEPARMENT_SUMMARY_GROUP(V_BEGIN_DATE VARCHAR2,V_END_DATE VARCHAR2, V_STOCK_NAME VARCHAR2, mtr_Department_summary_gather out sys_refcursor)
 is
v_sql varchar2(500):=' AND 1=1';   /* ‘:=’ 代表赋值 */
v_SESSION_ID CHAR(36);   /*  声明全局唯一标识 */
begin
 /* 首先将查询显示的表结构创建出来 */
     /*create table TEMP_DEPARMENT_RECIVE_SUMMARY
     (
          CD_ID VARCHAR2(36),  
          CD_NAME VARCHAR2(50),      --科室
          MBO_ID VARCHAR2(50),       --单据数量
          MBOD_MONEY NUMBER(22,4),        --出库金额
          SESSION_ID CHAR(36)        --全局唯一标识
     )*/
     --DROP TABLE TEMP_DEPARMENT_RECIVE_SUMMARY
      /*  将定义的全局唯一标识符存入到 这个变量（v_SESSION_ID）中 */
     SELECT SYS_GUID() INTO v_SESSION_ID FROM DUAL;


        if V_BEGIN_DATE IS NOT NULL then
        v_sql:= v_sql || ' AND MBO.CREATE_DATE >= to_date('''||to_char(V_BEGIN_DATE)||''',''yyyy-mm-dd'')';
      end if;

      if V_END_DATE IS NOT NULL then
          v_sql:= v_sql || ' AND MBO.CREATE_DATE < to_date('''||to_char(V_END_DATE)||''',''yyyy-mm-dd'')';
      end if;

      if V_STOCK_NAME IS NOT NULL then
          v_sql:= v_sql || ' AND MDS.NAME = '''||to_char(V_STOCK_NAME)||'''';
      end if;

      dbms_output.put_line(v_sql);
      /* 首先要明白在存储过程中创建表，若想往表中插入数据，会失败的，因为在存储过程中，你创建表的时候，表对象不存在，导致编译错误，使用 这句代码 （EXECUTE IMMEDIATE）可以让存储过程忽略其编译问题 */
      EXECUTE IMMEDIATE '
      INSERT INTO TEMP_DEPARMENT_RECIVE_SUMMARY
      (
          CD_ID,
          CD_NAME,         --科室
          MBO_ID,          --单据数量
          MBOD_MONEY ,     --出库金额
          SESSION_ID       --全局唯一标识
      )

               SELECT
                    CD.ID,
                    CD.NAME,         --科室
                    MBO.ID,          --单据数量
                    MBOD.MONEY ,     --出库金额
                    '''||v_SESSION_ID||'''    --全局唯一标识
                FROM
                     mtr_b_outstock mbo
                     inner join mdm_d_stock mds on mbo.stock_id = mds.id
                     inner join com_depart cd on mbo.use_dept_id = cd.id
                     inner join com_type ct on mbo.outstock_type_id = ct.id
                     inner join mtr_b_outstock_d mbod on mbod.base_id = mbo.id
                     inner join mtr_d_mtr mdm on mbod.mater_id = mdm.id
                     inner join mdm_d_dept mdd on mbod.prd_id = mdd.id
                WHERE
                       CT.ID = ''00430001'' 
                       and mbo.state = 3
                    '||v_sql||'';

      /*  在oracle的存储过程中中，执行select语句，会出现问题，需要通过这段代码编译下，才能识别 */
      open mtr_Department_summary_gather for
                 
           	    SELECT TB.CD_NAME AS CD_NAME ,COUNT(TB.CD_ID) AS MBO_ID,sum(TB.MONEY) AS MBOD_MONEY  FROM  (     
                              SELECT  GB.CD_NAME,GB.CD_ID,GB.MBO_ID CUN,sum(GB.MBOD_MONEY) MONEY FROM
                              (
                                  SELECT
                                        CD_ID,
                                        CD_NAME,         --科室
                                        MBO_ID,          --单据数量
                                        MBOD_MONEY ,     --出库金额
                                        SESSION_ID       --全局唯一标识
                                  FROM
                                      TEMP_DEPARMENT_RECIVE_SUMMARY
                                  WHERE
                                      SESSION_ID=v_SESSION_ID     
                                   
                              ) GB GROUP BY GB.CD_ID,GB.CD_NAME,GB.MBO_ID
                              
                             
                          )TB   GROUP BY TB.CD_ID,TB.CD_NAME   ;
                           
                         
         /*  执行完成后，删除这张临时查询记录表 */
          DELETE FROM TEMP_DEPARMENT_RECIVE_SUMMARY WHERE SESSION_ID = v_SESSION_ID;
    COMMIT;
exception
      when others
        then
          /*v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        \*写失败标志*\
        p_succeed := 0;*/

       open mtr_Department_summary_gather for
       SELECT
         '' CD_NAME,         --科室
         0 MBO_ID,          --单据数量
         0 MBOD_MONEY       --出库金额
        FROM DUAL;

        DELETE FROM TEMP_DEPARMENT_RECIVE_SUMMARY WHERE SESSION_ID = v_SESSION_ID;
        COMMIT;
end SP_TAB_DEPARMENT_SUMMARY_GROUP;
/*****************************************仓库科室领用汇总表‎（存储过程） END*******************************************************/ 




/*****************************************供应商入库汇总表（存储过程）BEGIN*******************************************************/ 

 /* 首先将查询显示的表结构创建出来 */

     create table TEMP_TAB_MTR_INSTOCK_SUMMARY
     (
          MDD_ID  CHAR(36),
          MDD_NAME varchar2(50),         --供货单位
          MBI_ID varchar2(36),           --单据数量
          MBID_MONEY NUMBER(22,4),            --入库金额
          SESSION_ID CHAR(36)            --全局唯一标识
     )
     /* 执行出错,先删除在执行创建表  */
     DROP TABLE TEMP_TAB_MTR_INSTOCK_SUMMARY



/*  创建存储过程 */

create or replace procedure SP_TAB_MTR_INSTOCK_SUMMARY( V_BEGIN_DATE varchar2, V_END_DATE varchar2, V_STOCK_NAME varchar2,MTR_INSTOCK_SUMMARY_gather out sys_refcursor)
is

v_sql varchar2(500):=' AND 1=1';   /* ‘:=’ 代表赋值 */
v_SESSION_ID CHAR(36);   /*  声明全局唯一标识 */
begin


 /* 首先将查询显示的表结构创建出来 */

     /*create table TEMP_TAB_MTR_INSTOCK_SUMMARY
     (
          MDD_ID  CHAR(36),
          MDD_NAME varchar2(50),         --供货单位
          MBI_ID varchar2(36),           --单据数量
          MBID_MONEY NUMBER(22,4),            --入库金额
          SESSION_ID CHAR(36)            --全局唯一标识
     )*/
     --DROP TABLE TEMP_TAB_MTR_INSTOCK_SUMMARY


      /*  将定义的全局唯一标识符存入到 这个变量（v_SESSION_ID）中 */
     SELECT SYS_GUID() INTO v_SESSION_ID FROM DUAL;


        if V_BEGIN_DATE IS NOT NULL then
        v_sql:= v_sql || ' AND MBI.CREATE_DATE >= to_date('''||to_char(V_BEGIN_DATE)||''',''yyyy-mm-dd'')';
      end if;

      if V_END_DATE IS NOT NULL then
          v_sql:= v_sql || ' AND MBI.CREATE_DATE < to_date('''||to_char(V_END_DATE)||''',''yyyy-mm-dd'')+1';
      end if;

      if V_STOCK_NAME IS NOT NULL then
          v_sql:= v_sql || ' AND MDS.NAME = '''||to_char(V_STOCK_NAME)||'''';
      end if;


      dbms_output.put_line(v_sql);
      /* 首先要明白在存储过程中创建表，若想往表中插入数据，会失败的，因为在存储过程中，你创建表的时候，表对象不存在，导致编译错误，使用 这句代码 （EXECUTE IMMEDIATE）可以让存储过程忽略其编译问题 */
      EXECUTE IMMEDIATE '
      INSERT INTO TEMP_TAB_MTR_INSTOCK_SUMMARY
      (
          MDD_ID ,
          MDD_NAME ,        --供货单位
          MBI_ID ,           --单据数量
          MBID_MONEY ,       --入库金额
          SESSION_ID         --全局唯一标识
      )
      SELECT
          MDD.ID,
          MDD.NAME ,        --供货单位
          MBI.ID ,           --单据数量
          MBID.MONEY ,       --入库金额
          '''||v_SESSION_ID||'''    --全局唯一标识
      FROM
          mtr_b_instock mbi inner join mdm_d_stock mds on mbi.stock_id = mds.id
          inner join mtr_b_instock_d mbid on mbid.base_id = mbi.id
          inner join com_type ct on mbid.unit_id = ct.id
          left join mdm_d_dept mdd on mbi.provider_id = mdd.id

     WHERE
         mbi.instock_type_id = ''00390001'' 
          and  mbi.state = 3
          '||v_sql||'

      ';

      /*  在oracle的存储过程中中，执行select语句，会出现问题，需要通过这段代码编译下，才能识别 */
      open MTR_INSTOCK_SUMMARY_gather for
           	  select tb.MDD_NAME,tb.MBI_ID,tb.MBID_MONEY from (
                  SELECT
                      MDD_ID ,
                      MDD_NAME ,        --供货单位
                      COUNT(MBI_ID) MBI_ID,           --单据数量
                      SUM(MBID_MONEY) MBID_MONEY       --入库金额
                  FROM
                      TEMP_TAB_MTR_INSTOCK_SUMMARY
                  WHERE
                      SESSION_ID=v_SESSION_ID
                  GROUP BY  MDD_ID, MDD_NAME
              ) tb;

         /*  执行完成后，删除这张临时查询记录表 */
          DELETE FROM TEMP_TAB_MTR_INSTOCK_SUMMARY WHERE SESSION_ID = v_SESSION_ID;
    COMMIT;
/*  查询做完了,还需要进行异常处理 */
exception
      when others
        then
          /*v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        \*写失败标志*\
        p_succeed := 0;*/

       open MTR_INSTOCK_SUMMARY_gather for
       SELECT
             '' MDD_NAME ,        --供货单位
             0 MBI_ID ,           --单据数量
             0 MBID_MONEY        --入库金额
        FROM DUAL;

        DELETE FROM TEMP_TAB_MTR_INSTOCK_SUMMARY  WHERE SESSION_ID = v_SESSION_ID;
        COMMIT;
end SP_TAB_MTR_INSTOCK_SUMMARY;
/*****************************************供应商入库汇总表（存储过程） END*******************************************************/ 





/*****************************************建始县人民医院卫材库库存物资明细表（存储过程） BEGIN*******************************************************/
 
 /* 首先将查询显示的表结构创建出来 */
create table TEMP_TAB_MTR_B_SUMMARY
     (
          MDM_CODE varchar2(50),        --编号
          MDM_NAME varchar2(50),        --物资名称
          CT_NAME varchar2(50),         --单位
          MBID_SPEC varchar2(50),       --规格
          MDMT_NAME VARCHAR2(50),       --分类
          MBID_AMOUNT NUMBER(22,4),      --数量
          MBID_MONEY NUMBER(22,4),           --金额
          MBID_PRICE NUMBER(22,4),           --单价
          MBI_CODE VARCHAR2(50),        --单号
          MBID_BATCH_CODE VARCHAR2(50), --批量
          MBID_INVALID_DATE VARCHAR2(50),       --有效期
          MDD_NAME VARCHAR2(50),        --生产厂家
          SESSION_ID CHAR(36)           --全局唯一标识
     )
     
     /* 若创建表时提示存在 请先删除  */
     DROP TABLE TEMP_TAB_MTR_B_SUMMARY






create or replace procedure SP_TAB_MTR_B_Materilas_SUMMARY(V_BEGIN_DATE varchar2, V_END_DATE varchar2, V_STOCK_NAME varchar2,mtr_summary_gather out sys_refcursor )

is
v_sql varchar2(500):=' AND 1=1';   /* ‘:=’ 代表赋值 */
v_SESSION_ID CHAR(36);   /*  声明全局唯一标识 */
begin


 /* 首先将查询显示的表结构创建出来 */

     /*create table TEMP_TAB_MTR_B_SUMMARY
     (
          MDM_CODE varchar2(50),        --编号
          MDM_NAME varchar2(50),        --物资名称
          CT_NAME varchar2(50),         --单位
          MBID_SPEC varchar2(50),       --规格
          MDMT_NAME VARCHAR2(50),       --分类
          MBID_AMOUNT NUMBER(22,4),           --数量
          MBID_MONEY NUMBER(22,4),           --金额
          MBID_PRICE NUMBER(22,4),           --单价
          MBI_CODE VARCHAR2(50),        --单号
          MBID_BATCH_CODE VARCHAR2(50), --批量
          MBID_INVALID_DATE VARCHAR2(50),       --有效期
          MDD_NAME VARCHAR2(50),        --生产厂家
          SESSION_ID CHAR(36)           --全局唯一标识
     )*/
     --DROP TABLE TEMP_TAB_MTR_B_SUMMARY


      /*  将定义的全局唯一标识符存入到 这个变量（v_SESSION_ID）中 */
     SELECT SYS_GUID() INTO v_SESSION_ID FROM DUAL;


        if V_BEGIN_DATE IS NOT NULL then
        v_sql:= v_sql || ' AND MBI.CREATE_DATE >= to_date('''||to_char(V_BEGIN_DATE)||''',''yyyy-mm-dd'')';
      end if;

      if V_END_DATE IS NOT NULL then
          v_sql:= v_sql || ' AND MBI.CREATE_DATE < to_date('''||to_char(V_END_DATE)||''',''yyyy-mm-dd'')+1';
      end if;

      if V_STOCK_NAME IS NOT NULL then
          v_sql:= v_sql || ' AND MDS.NAME = '''||to_char(V_STOCK_NAME)||'''';
      end if;

     /* if V_INSTOCK_TYPE_ID IS NOT NULL then
          v_sql:= v_sql || ' AND MBI.DEPT_ID = '''||to_char(V_INSTOCK_TYPE_ID)||'''';
      end if;*/

      dbms_output.put_line(v_sql);
      /* 首先要明白在存储过程中创建表，若想往表中插入数据，会失败的，因为在存储过程中，你创建表的时候，表对象不存在，导致编译错误，使用 这句代码 （EXECUTE IMMEDIATE）可以让存储过程忽略其编译问题 */
      EXECUTE IMMEDIATE '
      INSERT INTO TEMP_TAB_MTR_B_SUMMARY
      (
          MDM_CODE ,          --编号
          MDM_NAME ,          --物资名称
          CT_NAME ,           --单位
          MBID_SPEC ,         --规格
          MDMT_NAME ,         --分类
          MBID_AMOUNT ,       --数量
          MBID_MONEY ,        --金额
          MBID_PRICE ,        --单价
          MBI_CODE ,          --单号
          MBID_BATCH_CODE ,   --批量
          MBID_INVALID_DATE,  --有效期
          MDD_NAME ,          --生产厂家
          SESSION_ID          --全局唯一标识
      )
      SELECT
          MDM.CODE ,          --编号
          MDM.NAME ,          --物资名称
          CT.NAME ,           --单位
          MBID.SPEC ,         --规格
          MDMT.NAME ,         --分类
          MBID.AMOUNT ,       --数量
          MBID.MONEY ,        --金额
          MBID.PRICE ,        --单价
          MBI.CODE ,          --单号
          MBID.BATCH_CODE ,   --批量
          MBID.INVALID_DATE,  --有效期
          MDD.NAME ,          --生产厂家
          '''||v_SESSION_ID||'''    --全局唯一标识
      FROM
         mtr_b_instock_d mbid
         inner join mtr_b_instock mbi on mbid.base_id = mbi.id
         inner join mtr_d_mtr mdm on mbid.mater_id = mdm.id
         inner join com_type ct on mbid.unit_id = ct.id
         inner join mtr_d_mtr_type mdmt on mdm.type_id = mdmt.id
         inner join mdm_d_stock mds on mds.id = mbi.stock_id
         Left join mdm_d_dept mdd on mbid.prd_id = mdd.id
     WHERE
         mbi.instock_type_id = ''00390001''
          '||v_sql||'

      ';

      /*  在oracle的存储过程中中，执行select语句，会出现问题，需要通过这段代码编译下，才能识别 */
      open mtr_summary_gather for
                SELECT
                    MDM_CODE ,          --编号
                    MDM_NAME ,          --物资名称
                    CT_NAME ,           --单位
                    MBID_SPEC ,         --规格
                    MDMT_NAME ,         --分类
                    MBID_AMOUNT ,       --数量
                    MBID_MONEY ,        --金额
                    MBID_PRICE ,        --单价
                    MBI_CODE ,          --单号
                    MBID_BATCH_CODE ,   --批量
                    case when MBID_INVALID_DATE = '01-1月 -01' then '' else MBID_INVALID_DATE end MBID_INVALID_DATE,  --有效期
                    MDD_NAME ,          --生产厂家
                    SESSION_ID          --全局唯一标识
                FROM
                    TEMP_TAB_MTR_B_SUMMARY
                WHERE
                    SESSION_ID=v_SESSION_ID;
         /*  执行完成后，删除这张临时查询记录表 */
          DELETE FROM TEMP_TAB_MTR_B_SUMMARY

          WHERE SESSION_ID = v_SESSION_ID;
    COMMIT;



/*  查询做完了,还需要进行异常处理 */


exception
      when others
        then
          /*v_ErrorCode := SQLCODE;
        v_ErrorMsg := SQLERRM;
        v_CurrentUser := USER;
        v_Information := '遇到了错误 ' || TO_CHAR(SYSDATE) || ' 数据库用户 ' || v_CurrentUser;
        p_msg:= '执行错误,自动回滚.';
        dbms_output.put_line('执行错误,自动回滚.');
        p_msg:= p_msg || '详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information;
        dbms_output.put_line('详细信息:'||'错误代码:'||v_ErrorCode||',错误消息:'||v_ErrorMsg||',日志信息:'||v_Information);
        \*写失败标志*\
        p_succeed := 0;*/

       open mtr_summary_gather for
       SELECT
          ''  MDM_CODE ,          --编号
          ''  MDM_NAME ,          --物资名称
          ''  CT_NAME ,           --单位
          ''  MBID_SPEC ,         --规格
          ''  MDMT_NAME ,         --分类
          0  MBID_AMOUNT ,       --数量
          0  MBID_MONEY ,        --金额
          0  MBID_PRICE ,        --单价
          ''  MBI_CODE ,          --单号
          ''  MBID_BATCH_CODE ,   --批量
          ''  MBID_INVALID_DATE,  --有效期
          ''  MDD_NAME          --生产厂家
        FROM DUAL;

        DELETE

             FROM TEMP_TAB_MTR_B_SUMMARY

        WHERE SESSION_ID = v_SESSION_ID;
        COMMIT;

end SP_TAB_MTR_B_Materilas_SUMMARY;
/*****************************************建始县人民医院卫材库库存物资明细表（存储过程） END*******************************************************/ 