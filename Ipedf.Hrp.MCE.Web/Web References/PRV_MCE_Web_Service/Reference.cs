//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace Ipedf.Hrp.Web.PRV_MCE_Web_Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PRV_Web_ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class PRV_Web_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPrvInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEnterPriseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrvCertListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPrvAuditStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMtrCertAuditStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrdlistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrdCertlistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMtrCertListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMtrCertInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMtrCertCheckInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrvPicFileZipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrvAssetInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMceAssetDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMceAssetIsAuditOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMceAssetAuditStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PRV_Web_Service() {
            this.Url = global::Ipedf.Hrp.Web.Properties.Settings.Default.Ipedf_Hrp_MCE_Web_PRV_MCE_Web_Service_PRV_Web_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPrvInfoCompletedEventHandler GetPrvInfoCompleted;
        
        /// <remarks/>
        public event GetAccountInfoCompletedEventHandler GetAccountInfoCompleted;
        
        /// <remarks/>
        public event GetEnterPriseInfoCompletedEventHandler GetEnterPriseInfoCompleted;
        
        /// <remarks/>
        public event GetPrvCertListCompletedEventHandler GetPrvCertListCompleted;
        
        /// <remarks/>
        public event SetPrvAuditStatusCompletedEventHandler SetPrvAuditStatusCompleted;
        
        /// <remarks/>
        public event SetMtrCertAuditStatusCompletedEventHandler SetMtrCertAuditStatusCompleted;
        
        /// <remarks/>
        public event GetPrdlistCompletedEventHandler GetPrdlistCompleted;
        
        /// <remarks/>
        public event GetPrdCertlistCompletedEventHandler GetPrdCertlistCompleted;
        
        /// <remarks/>
        public event GetMtrCertListCompletedEventHandler GetMtrCertListCompleted;
        
        /// <remarks/>
        public event GetMtrCertInfoCompletedEventHandler GetMtrCertInfoCompleted;
        
        /// <remarks/>
        public event GetMtrCertCheckInfoCompletedEventHandler GetMtrCertCheckInfoCompleted;
        
        /// <remarks/>
        public event GetPrvPicFileZipCompletedEventHandler GetPrvPicFileZipCompleted;
        
        /// <remarks/>
        public event GetPrvAssetInfoCompletedEventHandler GetPrvAssetInfoCompleted;
        
        /// <remarks/>
        public event GetMceAssetDetailCompletedEventHandler GetMceAssetDetailCompleted;
        
        /// <remarks/>
        public event CheckMceAssetIsAuditCompletedEventHandler CheckMceAssetIsAuditCompleted;
        
        /// <remarks/>
        public event SetMceAssetAuditStatusCompletedEventHandler SetMceAssetAuditStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrvInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrvInfo(string strCause, string strPaging, string strOrder) {
            object[] results = this.Invoke("GetPrvInfo", new object[] {
                        strCause,
                        strPaging,
                        strOrder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrvInfoAsync(string strCause, string strPaging, string strOrder) {
            this.GetPrvInfoAsync(strCause, strPaging, strOrder, null);
        }
        
        /// <remarks/>
        public void GetPrvInfoAsync(string strCause, string strPaging, string strOrder, object userState) {
            if ((this.GetPrvInfoOperationCompleted == null)) {
                this.GetPrvInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrvInfoOperationCompleted);
            }
            this.InvokeAsync("GetPrvInfo", new object[] {
                        strCause,
                        strPaging,
                        strOrder}, this.GetPrvInfoOperationCompleted, userState);
        }
        
        private void OnGetPrvInfoOperationCompleted(object arg) {
            if ((this.GetPrvInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrvInfoCompleted(this, new GetPrvInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountInfo(string strID) {
            object[] results = this.Invoke("GetAccountInfo", new object[] {
                        strID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountInfoAsync(string strID) {
            this.GetAccountInfoAsync(strID, null);
        }
        
        /// <remarks/>
        public void GetAccountInfoAsync(string strID, object userState) {
            if ((this.GetAccountInfoOperationCompleted == null)) {
                this.GetAccountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountInfoOperationCompleted);
            }
            this.InvokeAsync("GetAccountInfo", new object[] {
                        strID}, this.GetAccountInfoOperationCompleted, userState);
        }
        
        private void OnGetAccountInfoOperationCompleted(object arg) {
            if ((this.GetAccountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountInfoCompleted(this, new GetAccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEnterPriseInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEnterPriseInfo(string strID) {
            object[] results = this.Invoke("GetEnterPriseInfo", new object[] {
                        strID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnterPriseInfoAsync(string strID) {
            this.GetEnterPriseInfoAsync(strID, null);
        }
        
        /// <remarks/>
        public void GetEnterPriseInfoAsync(string strID, object userState) {
            if ((this.GetEnterPriseInfoOperationCompleted == null)) {
                this.GetEnterPriseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnterPriseInfoOperationCompleted);
            }
            this.InvokeAsync("GetEnterPriseInfo", new object[] {
                        strID}, this.GetEnterPriseInfoOperationCompleted, userState);
        }
        
        private void OnGetEnterPriseInfoOperationCompleted(object arg) {
            if ((this.GetEnterPriseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnterPriseInfoCompleted(this, new GetEnterPriseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrvCertList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrvCertList(string strID) {
            object[] results = this.Invoke("GetPrvCertList", new object[] {
                        strID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrvCertListAsync(string strID) {
            this.GetPrvCertListAsync(strID, null);
        }
        
        /// <remarks/>
        public void GetPrvCertListAsync(string strID, object userState) {
            if ((this.GetPrvCertListOperationCompleted == null)) {
                this.GetPrvCertListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrvCertListOperationCompleted);
            }
            this.InvokeAsync("GetPrvCertList", new object[] {
                        strID}, this.GetPrvCertListOperationCompleted, userState);
        }
        
        private void OnGetPrvCertListOperationCompleted(object arg) {
            if ((this.GetPrvCertListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrvCertListCompleted(this, new GetPrvCertListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetPrvAuditStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetPrvAuditStatus(string strJson, string strStatus, string strUserID, string strUserNamr) {
            object[] results = this.Invoke("SetPrvAuditStatus", new object[] {
                        strJson,
                        strStatus,
                        strUserID,
                        strUserNamr});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetPrvAuditStatusAsync(string strJson, string strStatus, string strUserID, string strUserNamr) {
            this.SetPrvAuditStatusAsync(strJson, strStatus, strUserID, strUserNamr, null);
        }
        
        /// <remarks/>
        public void SetPrvAuditStatusAsync(string strJson, string strStatus, string strUserID, string strUserNamr, object userState) {
            if ((this.SetPrvAuditStatusOperationCompleted == null)) {
                this.SetPrvAuditStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPrvAuditStatusOperationCompleted);
            }
            this.InvokeAsync("SetPrvAuditStatus", new object[] {
                        strJson,
                        strStatus,
                        strUserID,
                        strUserNamr}, this.SetPrvAuditStatusOperationCompleted, userState);
        }
        
        private void OnSetPrvAuditStatusOperationCompleted(object arg) {
            if ((this.SetPrvAuditStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPrvAuditStatusCompleted(this, new SetPrvAuditStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetMtrCertAuditStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetMtrCertAuditStatus(string strJson, string strStatus, string strUserID, string strUserNamr) {
            object[] results = this.Invoke("SetMtrCertAuditStatus", new object[] {
                        strJson,
                        strStatus,
                        strUserID,
                        strUserNamr});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetMtrCertAuditStatusAsync(string strJson, string strStatus, string strUserID, string strUserNamr) {
            this.SetMtrCertAuditStatusAsync(strJson, strStatus, strUserID, strUserNamr, null);
        }
        
        /// <remarks/>
        public void SetMtrCertAuditStatusAsync(string strJson, string strStatus, string strUserID, string strUserNamr, object userState) {
            if ((this.SetMtrCertAuditStatusOperationCompleted == null)) {
                this.SetMtrCertAuditStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMtrCertAuditStatusOperationCompleted);
            }
            this.InvokeAsync("SetMtrCertAuditStatus", new object[] {
                        strJson,
                        strStatus,
                        strUserID,
                        strUserNamr}, this.SetMtrCertAuditStatusOperationCompleted, userState);
        }
        
        private void OnSetMtrCertAuditStatusOperationCompleted(object arg) {
            if ((this.SetMtrCertAuditStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMtrCertAuditStatusCompleted(this, new SetMtrCertAuditStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrdlist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrdlist(string strID) {
            object[] results = this.Invoke("GetPrdlist", new object[] {
                        strID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrdlistAsync(string strID) {
            this.GetPrdlistAsync(strID, null);
        }
        
        /// <remarks/>
        public void GetPrdlistAsync(string strID, object userState) {
            if ((this.GetPrdlistOperationCompleted == null)) {
                this.GetPrdlistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrdlistOperationCompleted);
            }
            this.InvokeAsync("GetPrdlist", new object[] {
                        strID}, this.GetPrdlistOperationCompleted, userState);
        }
        
        private void OnGetPrdlistOperationCompleted(object arg) {
            if ((this.GetPrdlistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrdlistCompleted(this, new GetPrdlistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrdCertlist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrdCertlist(string strID) {
            object[] results = this.Invoke("GetPrdCertlist", new object[] {
                        strID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrdCertlistAsync(string strID) {
            this.GetPrdCertlistAsync(strID, null);
        }
        
        /// <remarks/>
        public void GetPrdCertlistAsync(string strID, object userState) {
            if ((this.GetPrdCertlistOperationCompleted == null)) {
                this.GetPrdCertlistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrdCertlistOperationCompleted);
            }
            this.InvokeAsync("GetPrdCertlist", new object[] {
                        strID}, this.GetPrdCertlistOperationCompleted, userState);
        }
        
        private void OnGetPrdCertlistOperationCompleted(object arg) {
            if ((this.GetPrdCertlistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrdCertlistCompleted(this, new GetPrdCertlistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMtrCertList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMtrCertList(string strCause, string strPaging, string strOrder) {
            object[] results = this.Invoke("GetMtrCertList", new object[] {
                        strCause,
                        strPaging,
                        strOrder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMtrCertListAsync(string strCause, string strPaging, string strOrder) {
            this.GetMtrCertListAsync(strCause, strPaging, strOrder, null);
        }
        
        /// <remarks/>
        public void GetMtrCertListAsync(string strCause, string strPaging, string strOrder, object userState) {
            if ((this.GetMtrCertListOperationCompleted == null)) {
                this.GetMtrCertListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMtrCertListOperationCompleted);
            }
            this.InvokeAsync("GetMtrCertList", new object[] {
                        strCause,
                        strPaging,
                        strOrder}, this.GetMtrCertListOperationCompleted, userState);
        }
        
        private void OnGetMtrCertListOperationCompleted(object arg) {
            if ((this.GetMtrCertListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMtrCertListCompleted(this, new GetMtrCertListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMtrCertInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMtrCertInfo(string strID) {
            object[] results = this.Invoke("GetMtrCertInfo", new object[] {
                        strID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMtrCertInfoAsync(string strID) {
            this.GetMtrCertInfoAsync(strID, null);
        }
        
        /// <remarks/>
        public void GetMtrCertInfoAsync(string strID, object userState) {
            if ((this.GetMtrCertInfoOperationCompleted == null)) {
                this.GetMtrCertInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMtrCertInfoOperationCompleted);
            }
            this.InvokeAsync("GetMtrCertInfo", new object[] {
                        strID}, this.GetMtrCertInfoOperationCompleted, userState);
        }
        
        private void OnGetMtrCertInfoOperationCompleted(object arg) {
            if ((this.GetMtrCertInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMtrCertInfoCompleted(this, new GetMtrCertInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMtrCertCheckInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMtrCertCheckInfo(string strJsonIDs) {
            object[] results = this.Invoke("GetMtrCertCheckInfo", new object[] {
                        strJsonIDs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMtrCertCheckInfoAsync(string strJsonIDs) {
            this.GetMtrCertCheckInfoAsync(strJsonIDs, null);
        }
        
        /// <remarks/>
        public void GetMtrCertCheckInfoAsync(string strJsonIDs, object userState) {
            if ((this.GetMtrCertCheckInfoOperationCompleted == null)) {
                this.GetMtrCertCheckInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMtrCertCheckInfoOperationCompleted);
            }
            this.InvokeAsync("GetMtrCertCheckInfo", new object[] {
                        strJsonIDs}, this.GetMtrCertCheckInfoOperationCompleted, userState);
        }
        
        private void OnGetMtrCertCheckInfoOperationCompleted(object arg) {
            if ((this.GetMtrCertCheckInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMtrCertCheckInfoCompleted(this, new GetMtrCertCheckInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrvPicFileZip", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrvPicFileZip(string strPrvID) {
            object[] results = this.Invoke("GetPrvPicFileZip", new object[] {
                        strPrvID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrvPicFileZipAsync(string strPrvID) {
            this.GetPrvPicFileZipAsync(strPrvID, null);
        }
        
        /// <remarks/>
        public void GetPrvPicFileZipAsync(string strPrvID, object userState) {
            if ((this.GetPrvPicFileZipOperationCompleted == null)) {
                this.GetPrvPicFileZipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrvPicFileZipOperationCompleted);
            }
            this.InvokeAsync("GetPrvPicFileZip", new object[] {
                        strPrvID}, this.GetPrvPicFileZipOperationCompleted, userState);
        }
        
        private void OnGetPrvPicFileZipOperationCompleted(object arg) {
            if ((this.GetPrvPicFileZipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrvPicFileZipCompleted(this, new GetPrvPicFileZipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrvAssetInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrvAssetInfo(string strCause, string strPaging, string strOrder) {
            object[] results = this.Invoke("GetPrvAssetInfo", new object[] {
                        strCause,
                        strPaging,
                        strOrder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrvAssetInfoAsync(string strCause, string strPaging, string strOrder) {
            this.GetPrvAssetInfoAsync(strCause, strPaging, strOrder, null);
        }
        
        /// <remarks/>
        public void GetPrvAssetInfoAsync(string strCause, string strPaging, string strOrder, object userState) {
            if ((this.GetPrvAssetInfoOperationCompleted == null)) {
                this.GetPrvAssetInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrvAssetInfoOperationCompleted);
            }
            this.InvokeAsync("GetPrvAssetInfo", new object[] {
                        strCause,
                        strPaging,
                        strOrder}, this.GetPrvAssetInfoOperationCompleted, userState);
        }
        
        private void OnGetPrvAssetInfoOperationCompleted(object arg) {
            if ((this.GetPrvAssetInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrvAssetInfoCompleted(this, new GetPrvAssetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMceAssetDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMceAssetDetail(string strID) {
            object[] results = this.Invoke("GetMceAssetDetail", new object[] {
                        strID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMceAssetDetailAsync(string strID) {
            this.GetMceAssetDetailAsync(strID, null);
        }
        
        /// <remarks/>
        public void GetMceAssetDetailAsync(string strID, object userState) {
            if ((this.GetMceAssetDetailOperationCompleted == null)) {
                this.GetMceAssetDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMceAssetDetailOperationCompleted);
            }
            this.InvokeAsync("GetMceAssetDetail", new object[] {
                        strID}, this.GetMceAssetDetailOperationCompleted, userState);
        }
        
        private void OnGetMceAssetDetailOperationCompleted(object arg) {
            if ((this.GetMceAssetDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMceAssetDetailCompleted(this, new GetMceAssetDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckMceAssetIsAudit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckMceAssetIsAudit(string strJson) {
            object[] results = this.Invoke("CheckMceAssetIsAudit", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckMceAssetIsAuditAsync(string strJson) {
            this.CheckMceAssetIsAuditAsync(strJson, null);
        }
        
        /// <remarks/>
        public void CheckMceAssetIsAuditAsync(string strJson, object userState) {
            if ((this.CheckMceAssetIsAuditOperationCompleted == null)) {
                this.CheckMceAssetIsAuditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMceAssetIsAuditOperationCompleted);
            }
            this.InvokeAsync("CheckMceAssetIsAudit", new object[] {
                        strJson}, this.CheckMceAssetIsAuditOperationCompleted, userState);
        }
        
        private void OnCheckMceAssetIsAuditOperationCompleted(object arg) {
            if ((this.CheckMceAssetIsAuditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMceAssetIsAuditCompleted(this, new CheckMceAssetIsAuditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetMceAssetAuditStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetMceAssetAuditStatus(string strJson, string strStatus, string strUserID, string strUserName, string strReason) {
            object[] results = this.Invoke("SetMceAssetAuditStatus", new object[] {
                        strJson,
                        strStatus,
                        strUserID,
                        strUserName,
                        strReason});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetMceAssetAuditStatusAsync(string strJson, string strStatus, string strUserID, string strUserName, string strReason) {
            this.SetMceAssetAuditStatusAsync(strJson, strStatus, strUserID, strUserName, strReason, null);
        }
        
        /// <remarks/>
        public void SetMceAssetAuditStatusAsync(string strJson, string strStatus, string strUserID, string strUserName, string strReason, object userState) {
            if ((this.SetMceAssetAuditStatusOperationCompleted == null)) {
                this.SetMceAssetAuditStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMceAssetAuditStatusOperationCompleted);
            }
            this.InvokeAsync("SetMceAssetAuditStatus", new object[] {
                        strJson,
                        strStatus,
                        strUserID,
                        strUserName,
                        strReason}, this.SetMceAssetAuditStatusOperationCompleted, userState);
        }
        
        private void OnSetMceAssetAuditStatusOperationCompleted(object arg) {
            if ((this.SetMceAssetAuditStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMceAssetAuditStatusCompleted(this, new SetMceAssetAuditStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPrvInfoCompletedEventHandler(object sender, GetPrvInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrvInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrvInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccountInfoCompletedEventHandler(object sender, GetAccountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEnterPriseInfoCompletedEventHandler(object sender, GetEnterPriseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEnterPriseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnterPriseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPrvCertListCompletedEventHandler(object sender, GetPrvCertListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrvCertListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrvCertListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetPrvAuditStatusCompletedEventHandler(object sender, SetPrvAuditStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPrvAuditStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPrvAuditStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetMtrCertAuditStatusCompletedEventHandler(object sender, SetMtrCertAuditStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMtrCertAuditStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMtrCertAuditStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPrdlistCompletedEventHandler(object sender, GetPrdlistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrdlistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrdlistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPrdCertlistCompletedEventHandler(object sender, GetPrdCertlistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrdCertlistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrdCertlistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMtrCertListCompletedEventHandler(object sender, GetMtrCertListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMtrCertListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMtrCertListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMtrCertInfoCompletedEventHandler(object sender, GetMtrCertInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMtrCertInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMtrCertInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMtrCertCheckInfoCompletedEventHandler(object sender, GetMtrCertCheckInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMtrCertCheckInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMtrCertCheckInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPrvPicFileZipCompletedEventHandler(object sender, GetPrvPicFileZipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrvPicFileZipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrvPicFileZipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPrvAssetInfoCompletedEventHandler(object sender, GetPrvAssetInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrvAssetInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrvAssetInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMceAssetDetailCompletedEventHandler(object sender, GetMceAssetDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMceAssetDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMceAssetDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckMceAssetIsAuditCompletedEventHandler(object sender, CheckMceAssetIsAuditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMceAssetIsAuditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMceAssetIsAuditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetMceAssetAuditStatusCompletedEventHandler(object sender, SetMceAssetAuditStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMceAssetAuditStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMceAssetAuditStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591